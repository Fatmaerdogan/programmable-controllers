MPASM  5.44                      LCDAND~1.ASM   4-16-2020  23:11:52         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 
                      00002 ; PICBASIC PRO(TM) Compiler 2.60, (c) 1998, 2009 microEngineering Labs, Inc. All Rights Reserved. 
  00000001            00003 _USED                   EQU     1
                      00004 
                      00005         INCLUDE "C:\PBP\16F877.INC"
                      00001 ;****************************************************************
                      00002 ;*  16F877.INC                                                  *
                      00003 ;*                                                              *
                      00004 ;*  By        : Leonard Zerman, Jeff Schmoyer                   *
                      00005 ;*  Notice    : Copyright (c) 2003 microEngineering Labs, Inc.  *
                      00006 ;*              All Rights Reserved                             *
                      00007 ;*  Date      : 11/07/03                                        *
                      00008 ;*  Version   : 2.45                                            *
                      00009 ;*  Notes     :                                                 *
                      00010 ;****************************************************************
                      00019         LIST
                      00020         LIST p = 16F877, r = dec, w = -302
                      00021         INCLUDE "P16F877.INC"   ; MPASM  Header
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ;  MPASM PIC16F877 processor include
                      00005 ; 
                      00006 ;  (c) Copyright 1999-2012 Microchip Technology, All rights reserved
                      00007 ;==========================================================================
                      00008 
                      00540         LIST
2007   3F75           00022         __config _XT_OSC & _WDT_ON & _PWRTE_ON & _LVP_OFF & _CP_OFF
                      00025         LIST
                      00006 
                      00007 
                      00008 ; Define statements.
                      00009 ; C:\PBP\16F877.BAS             00018   DEFINE  CODE_SIZE 8
                      00010 #define         CODE_SIZE                8
                      00011 ; C:\PBP\LCDAND~1.PBP           00001   define HSER_RCSTA 90h
                      00012 #define         HSER_RCSTA               90h
                      00013 ; C:\PBP\LCDAND~1.PBP           00002   DEFINE HSER_TXSTA 24h
                      00014 #define         HSER_TXSTA               24h
                      00015 ; C:\PBP\LCDAND~1.PBP           00003   DEFINE HSER_BAUD 9600    'terminaldeki haberleþme hýzý
                      00016 #define         HSER_BAUD                9600    
                      00017 ; C:\PBP\LCDAND~1.PBP           00004   DEFINE HSER_CLROERR 1
                      00018 #define         HSER_CLROERR             1
                      00019 ; C:\PBP\LCDAND~1.PBP           00006   DEFINE LCD_DREG PORTD           'LCD data portunun baglandigi pi
                            c portu 
                      00020 #define         LCD_DREG                 PORTD           
                      00021 ; C:\PBP\LCDAND~1.PBP           00007   DEFINE LCD_DBIT 0                        '4-bit bus için data bi
                            t(0yada4) baslangiç
                      00022 #define         LCD_DBIT                 0                        
                      00023 ; C:\PBP\LCDAND~1.PBP           00008   DEFINE LCD_RSREG PORTE          'LCD RS in baglandigi pic portu 
                      00024 #define         LCD_RSREG                PORTE          
                      00025 ; C:\PBP\LCDAND~1.PBP           00009   DEFINE LCD_RSBIT 0                      'RS in baglandigi pic po
                            rtE nin bit numarasi
                      00026 #define         LCD_RSBIT                0                      
MPASM  5.44                      LCDAND~1.ASM   4-16-2020  23:11:52         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00027 ; C:\PBP\LCDAND~1.PBP           00010   DEFINE LCD_EREG PORTE            'LCD E nin baglandigi pic portu
                             
                      00028 #define         LCD_EREG                 PORTE            
                      00029 ; C:\PBP\LCDAND~1.PBP           00011   DEFINE LCD_EBIT 2                        'LCD E nin baglandigi p
                            ic portE nin bit numarasi
                      00030 #define         LCD_EBIT                 2                        
                      00031 ; C:\PBP\LCDAND~1.PBP           00012   DEFINE LCD_BITS 8                             'PortD nin 8 biti 
                            veri transferi için kullanildi
                      00032 #define         LCD_BITS                 8                             
                      00033 
  00000020            00034 RAM_START                       EQU     00020h
  000001EF            00035 RAM_END                         EQU     001EFh
  00000004            00036 RAM_BANKS                       EQU     00004h
  00000020            00037 BANK0_START                     EQU     00020h
  0000007F            00038 BANK0_END                       EQU     0007Fh
  000000A0            00039 BANK1_START                     EQU     000A0h
  000000EF            00040 BANK1_END                       EQU     000EFh
  00000110            00041 BANK2_START                     EQU     00110h
  0000016F            00042 BANK2_END                       EQU     0016Fh
  00000190            00043 BANK3_START                     EQU     00190h
  000001EF            00044 BANK3_END                       EQU     001EFh
  00002100            00045 EEPROM_START                    EQU     02100h
  000021FF            00046 EEPROM_END                      EQU     021FFh
                      00047 
                      00048 ; C:\PBP\PBPPIC14.RAM           00012   A00020  R0      VAR     WORD BANK0 SYSTEM       ' System Registe
                            r
  00000020            00049 R0                              EQU     RAM_START + 000h
                      00050 ; C:\PBP\PBPPIC14.RAM           00013   A00022  R1      VAR     WORD BANK0 SYSTEM       ' System Registe
                            r
  00000022            00051 R1                              EQU     RAM_START + 002h
                      00052 ; C:\PBP\PBPPIC14.RAM           00014   A00024  R2      VAR     WORD BANK0 SYSTEM       ' System Registe
                            r
  00000024            00053 R2                              EQU     RAM_START + 004h
                      00054 ; C:\PBP\PBPPIC14.RAM           00015   A00026  R3      VAR     WORD BANK0 SYSTEM       ' System Registe
                            r
  00000026            00055 R3                              EQU     RAM_START + 006h
                      00056 ; C:\PBP\PBPPIC14.RAM           00016   A00028  R4      VAR     WORD BANK0 SYSTEM       ' System Registe
                            r
  00000028            00057 R4                              EQU     RAM_START + 008h
                      00058 ; C:\PBP\PBPPIC14.RAM           00017   A0002A  R5      VAR     WORD BANK0 SYSTEM       ' System Registe
                            r
  0000002A            00059 R5                              EQU     RAM_START + 00Ah
                      00060 ; C:\PBP\PBPPIC14.RAM           00018   A0002C  R6      VAR     WORD BANK0 SYSTEM       ' System Registe
                            r
  0000002C            00061 R6                              EQU     RAM_START + 00Ch
                      00062 ; C:\PBP\PBPPIC14.RAM           00019   A0002E  R7      VAR     WORD BANK0 SYSTEM       ' System Registe
                            r
  0000002E            00063 R7                              EQU     RAM_START + 00Eh
                      00064 ; C:\PBP\PBPPIC14.RAM           00020   A00030  R8      VAR     WORD BANK0 SYSTEM       ' System Registe
                            r
  00000030            00065 R8                              EQU     RAM_START + 010h
                      00066 ; C:\PBP\PBPPIC14.RAM           00026   A00032  FLAGS   VAR     BYTE BANK0 SYSTEM       ' Static flags
  00000032            00067 FLAGS                           EQU     RAM_START + 012h
MPASM  5.44                      LCDAND~1.ASM   4-16-2020  23:11:52         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00068 ; C:\PBP\PBPPIC14.RAM           00025   A00033  GOP     VAR     BYTE BANK0 SYSTEM       ' Gen Op Paramet
                            er
  00000033            00069 GOP                             EQU     RAM_START + 013h
                      00070 ; C:\PBP\PBPPIC14.RAM           00022   A00034  RM1     VAR     BYTE BANK0 SYSTEM       ' Pin 1 Mask
  00000034            00071 RM1                             EQU     RAM_START + 014h
                      00072 ; C:\PBP\PBPPIC14.RAM           00024   A00035  RM2     VAR     BYTE BANK0 SYSTEM       ' Pin 2 Mask
  00000035            00073 RM2                             EQU     RAM_START + 015h
                      00074 ; C:\PBP\PBPPIC14.RAM           00021   A00036  RR1     VAR     BYTE BANK0 SYSTEM       ' Pin 1 Register
  00000036            00075 RR1                             EQU     RAM_START + 016h
                      00076 ; C:\PBP\PBPPIC14.RAM           00023   A00037  RR2     VAR     BYTE BANK0 SYSTEM       ' Pin 2 Register
  00000037            00077 RR2                             EQU     RAM_START + 017h
                      00078 ; C:\PBP\LCDAND~1.PBP           00018   A00038  x var byte
  00000038            00079 _x                              EQU     RAM_START + 018h
                      00080 ; C:\PBP\16F877.BAS             00022   PORTL   VAR     PORTB
  00000006            00081 _PORTL                          EQU      PORTB
                      00082 ; C:\PBP\16F877.BAS             00023   PORTH   VAR     PORTC
  00000007            00083 _PORTH                          EQU      PORTC
                      00084 ; C:\PBP\16F877.BAS             00024   TRISL   VAR     TRISB
  00000086            00085 _TRISL                          EQU      TRISB
                      00086 ; C:\PBP\16F877.BAS             00025   TRISH   VAR     TRISC
  00000087            00087 _TRISH                          EQU      TRISC
                      00088 #define _PORTE??1                PORTE, 001h
                      00089         INCLUDE "LCDAND~1.MAC"
                      00001 
                      00057         LIST
                      00090         INCLUDE "C:\PBP\PBPPIC14.LIB"
                      00001 ;******************************************************************
                      00002 ;*  PBPPIC14.LIB                                                  *
                      00003 ;*                                                                *
                      00004 ;*  By        : Leonard Zerman, Jeff Schmoyer                     *
                      00005 ;*  Notice    : Copyright (c) 2009 microEngineering Labs, Inc.    *
                      00006 ;*              All Rights Reserved                               *
                      00007 ;*  Date      : 07/08/09                                          *
                      00008 ;*  Version   : 2.60                                              *
                      00009 ;*  Notes     :                                                   *
                      00010 ;******************************************************************
                      00054   LIST
                      00055 ; Oscillator is 4MHz
                      01133   LIST
0000                  01134     ORG RESET_ORG               ; Reset vector usually at 0
                      01144   LIST
0000   01B2           01145         clrf    FLAGS           ; Clear all flags on reset
                      01149   LIST
0001   287C           01150         goto    INIT            ; Finish initialization
                      02283   LIST
0002                  02284 HSERIN
                      02285       ifdef HSER_CLROERR
0002   1898           02286         btfsc   RCSTA, OERR     ; Check for overflow error
0003   1218           02287         bcf     RCSTA, CREN     ; Toggle continuous receive to clear error
0004   1618           02288         bsf     RCSTA, CREN
                      02289       endif
                      02290 hserinloop CLRWDT?              ; Keep Watchdog timer clear
                          M     ifndef NO_CLRWDT
MPASM  5.44                      LCDAND~1.ASM   4-16-2020  23:11:52         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0005   0064               M         clrwdt
                          M     endif
0006   1E8C           02291         btfss   PIR1, RCIF      ; Check for char
0007   2805           02292         goto    hserinloop      ; Loop till char
                      02298   LIST
0008                  02299 HSERINX
                      02300       ifdef HSERPARITY_USED
                      02301           if ((HSER_BITS) == 9)
                      02302         rrf     RCSTA, W        ; Shuffle 9th bit to R4.0
                      02303         rlf     R4, F           ; (Ends up in R4.1)
                      02304           endif
                      02305       endif
                      02306 
0008   081A           02307         movf    RCREG, W        ; Get the char
                      02308 
                      02309       ifdef HSERPARITY_USED
                      02310         call    HSERPARITY      ; Calculate the parity
                      02311         rrf     GOP, F          ; Shuffle parity bit from GOP.0 to R4.0
                      02312         rlf     R4, F
                      02313           if ((HSER_BITS) != 9)
                      02314         andlw   7fh             ; Get rid of the parity bit
                      02315           else
                      02316         btfsc   R4, 1           ; Add in 9th bit, saved earlier
                      02317         incf    R4, F
                      02318           endif
                      02319           ifdef HSER_ODD
                      02320         incf    R4, F
                      02321           endif
                      02322       endif
                      02323 
0009   1403           02324         bsf     STATUS, C       ; Indicate not timed out (C set)
000A   2877           02325         goto    DONE            ; That's it
                      02407   LIST
                      02408 HSEROUT CLRWDT?                 ; Keep Watchdog clear
                          M     ifndef NO_CLRWDT
000B   0064               M         clrwdt
                          M     endif
000C   1E0C           02409         btfss   PIR1, TXIF      ; Wait till ready
000D   280B           02410         goto    HSEROUT
                      02411 
                      02412       ifdef HSERPARITY_USED
                      02413           if (HSER_BITS != 9)
                      02414         andlw   7fh             ; Clear top bit
                      02415         call    HSERPARITY      ; Calculate the parity
                      02416             ifdef HSER_ODD
                      02417         btfss   GOP, 0
                      02418             else
                      02419         btfsc   GOP, 0
                      02420             endif
                      02421         iorlw   80h             ; Set parity
                      02422           else
                      02423         call    HSERPARITY      ; Calculate the parity
                      02424         rrf     GOP, F          ; Move the parity bit to C
MPASM  5.44                      LCDAND~1.ASM   4-16-2020  23:11:52         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02425             if (TXSTA > 7fh)
                      02426         bsf     STATUS, RP0     ; Switch to bank 1
                      02427             endif
                      02428         bcf     TXSTA, TX9D     ; Start parity at 0
                      02429             ifdef HSER_ODD
                      02430         btfss   STATUS, C
                      02431             else
                      02432         btfsc   STATUS, C
                      02433             endif
                      02434         bsf     TXSTA, TX9D     ; Set parity in 9th bit
                      02435             if (TXSTA > 7fh)
                      02436         bcf     STATUS, RP0     ; Switch back to bank 0
                      02437             endif
                      02438           endif
                      02439       endif
                      02440 
000E   0099           02441         movwf   TXREG           ; Send the char
000F   1403           02442         bsf     STATUS, C       ; Set no timeout for Serout2mod
0010   2877           02443         goto    DONE            ; That's it
                      02931   LIST
0011   00A7           02932 LCDOUT  movwf   R3 + 1          ; Save char
                      02933 
0012   1109           02934         bcf     LCD_EREG, LCD_EBIT      ; Set E low
0013   1009           02935         bcf     LCD_RSREG, LCD_RSBIT    ; Set command register select
0014   1009           02936         bcf     LCD_RWREG, LCD_RWBIT    ; Set RW low (write)
                      02937 
0015   1683           02938         bsf     STATUS, RP0     ; Point to TRISes
0016   1109           02939         bcf     LCD_EREG, LCD_EBIT      ; Set E to output
0017   1009           02940         bcf     LCD_RSREG, LCD_RSBIT    ; Set RS to output
0018   1009           02941         bcf     LCD_RWREG, LCD_RWBIT    ; Set RW to output
                      02942     if ((LCD_BITS) == 8)
0019   0188           02943         clrf    LCD_DREG        ; Set port to all output
                      02944     else
                      02945       if ((LCD_DBIT) == 0)
                      02946         movlw   0f0h
                      02947       else
                      02948         movlw   0fh
                      02949       endif
                      02950         andwf   LCD_DREG, F     ; Set proper half of port to output
                      02951     endif
001A   1283           02952         bcf     STATUS, RP0     ; Point back to ports
                      02953 
001B   0827           02954         movf    R3 + 1, W       ; Get back char
                      02955 
001C   18B2           02956         btfsc   LCDINITFLAG     ; Has lcd been inititalized?
001D   2839           02957         goto    lcdout1         ; Yes
                      02958 
001E   303A           02959         movlw   high 15100      ; Wait at least 15ms
001F   00A1           02960         movwf   R0 + 1
0020   30FC           02961         movlw   low 15100
0021   2063           02962         call    PAUSEUSL
                      02963 
0022   3033           02964         movlw   33h             ; Init lcd
MPASM  5.44                      LCDAND~1.ASM   4-16-2020  23:11:52         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0023   00A6           02965         movwf   R3              ; Save char
0024   204C           02966         call    lcdloop         ; Send init
                      02967 
0025   3010           02968         movlw   high 4200       ; Wait at least 4.1ms
0026   00A1           02969         movwf   R0 + 1
0027   3068           02970         movlw   low 4200
0028   2063           02971         call    PAUSEUSL
                      02972 
0029   204C           02973         call    lcdloop         ; Send init (33) again
                      02974 
002A   3064           02975         movlw   100             ; Wait at least 100us
002B   2062           02976         call    PAUSEUS
                      02977 
                      02978     if ((LCD_BITS) == 8)
002C   204C           02979         call    lcdloop         ; Send init (33) one more time
                      02980       if ((LCD_LINES) == 1)
                      02981         movlw   30h             ; 8-bit mode, 1 line, 5x7 font
                      02982       else
002D   3038           02983         movlw   38h             ; 8-bit mode, 2+ lines, 5x7 font
                      02984       endif
                      02985     else
                      02986         movlw   22h             ; Send init to 4-bit mode
                      02987         movwf   R3              ; Save character
                      02988         call    lcdloop         ; Set interface to 4-bit mode
                      02989       if ((LCD_LINES) == 1)
                      02990         movlw   20h             ; 4-bit mode, 1 line, 5x7 font
                      02991       else
                      02992         movlw   28h             ; 4-bit mode, 2+ lines, 5x7 font
                      02993       endif
                      02994     endif
002E   2038           02995         call    lcdoutcom       ; Send function set
                      02996 
002F   300C           02997         movlw   0ch             ; Display on, no cursor, no blink
0030   2038           02998         call    lcdoutcom
                      02999 
0031   3001           03000         movlw   01h             ; Display clear
0032   2038           03001         call    lcdoutcom
                      03002 
0033   3006           03003         movlw   06h             ; Lcd entry mode set, increment, no shift
0034   2038           03004         call    lcdoutcom
                      03005 
0035   14B2           03006         bsf     LCDINITFLAG     ; Set to initialized
                      03007 
0036   0827           03008         movf    R3 + 1, W       ; Get saved char back (again)
0037   2839           03009         goto    lcdout1
                      03010 
0038   1432           03011 lcdoutcom bsf   LCDCDFLAG       ; Set for command
                      03012 
0039   00A6           03013 lcdout1 movwf   R3              ; Save char
003A   1C32           03014         btfss   LCDCDFLAG       ; Command this time?
003B   2847           03015         goto    lcdchkcd        ; No
                      03016 
003C   1009           03017         bcf     LCD_RSREG, LCD_RSBIT    ; Set command register select
MPASM  5.44                      LCDAND~1.ASM   4-16-2020  23:11:52         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

003D   3C03           03018         sublw   3               ; Is it a slow command (clear screen or home)?
003E   1C03           03019         btfss   STATUS, C       ; Long or short delay?
003F   284C           03020         goto    lcdsend         ; Short delay
                      03021 
0040   204C           03022         call    lcdsend         ; Long delay (includes short delay)
0041   3007           03023         movlw   high LCD_COMMANDUS      ; Wait for command to complete
0042   00A1           03024         movwf   R0 + 1
0043   30D0           03025         movlw   low LCD_COMMANDUS
0044   2063           03026         call    PAUSEUSL
0045   1403           03027         bsf     STATUS, C       ; Set no timeout for Serout2mod
0046   0008           03028         return
                      03029 
0047   1432           03030 lcdchkcd bsf    LCDCDFLAG       ; Indicate first nibble (or command next time)
0048   3CFE           03031         sublw   0feh            ; Command next time? (char still in W)
0049   1903           03032         btfsc   STATUS, Z
004A   2877           03033         goto    DONE            ; Yes - nothing to do this time (C set for no timeout for Serout2mod)
                      03034 
004B   1409           03035         bsf     LCD_RSREG, LCD_RSBIT    ; Set data register select
                      03036 
004C                  03037 lcdsend
                      03038     if ((LCD_BITS) == 8)
004C   1509           03039 lcdloop bsf     LCD_EREG, LCD_EBIT      ; Enabled
004D   0826           03040         movf    R3, W           ; Get char back
004E   0088           03041         movwf   LCD_DREG        ; Write char to the port
                      03042       if (OSC > 16)
                      03043         nop                     ; Minimum 1us enable time
                      03044       endif
                      03045       if (OSC > 20)
                      03046         nop
                      03047       endif
004F   1032           03048         bcf     LCDCDFLAG       ; Indicate data next time
0050   1109           03049         bcf     LCD_EREG, LCD_EBIT      ; Not enabled
                      03050     else
                      03051 
                      03052       if ((LCD_DBIT) == 0)
                      03053         swapf   R3, F           ; Swap top and bottom nibbles
                      03054       endif
                      03055 
                      03056         btfss   LCDCDFLAG       ; First time through only
                      03057 lcdloop bcf     LCDCDFLAG       ; Indicate second nibble (and data next time)
                      03058 
                      03059         bsf     LCD_EREG, LCD_EBIT      ; Enabled
                      03060 
                      03061       if ((LCD_DBIT) == 0)
                      03062         movlw   0f0h            ; Clear lcd data port
                      03063       else
                      03064         movlw   0fh             ; Clear lcd data port
                      03065       endif
                      03066         andwf   LCD_DREG, F
                      03067 
                      03068         movf    R3, W           ; Isolate proper nibble of char
                      03069       if ((LCD_DBIT) == 0)
                      03070         andlw   0fh
MPASM  5.44                      LCDAND~1.ASM   4-16-2020  23:11:52         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      03071       else
                      03072         andlw   0f0h
                      03073       endif
                      03074         iorwf   LCD_DREG, F     ; Write char to port
                      03075         bcf     LCD_EREG, LCD_EBIT      ; Not enabled - that's four
                      03076         swapf   R3, F           ; Get to other nibble
                      03077 
                      03078         btfsc   LCDCDFLAG       ; Need to send 4 more?
                      03079         goto    lcdloop         ; Send lower 4 to lcd
                      03080     endif
                      03081 
0051   3032           03082         movlw   LCD_DATAUS      ; Wait for data operation to complete
0052   2062           03083         call    PAUSEUS
0053   1403           03084         bsf     STATUS, C       ; Set no timeout for Serout2mod
0054   0008           03085         return
                      06329   LIST
0055   01A3           06330 PAUSE   clrf    R1 + 1
0056   00A2           06331 PAUSEL  movwf   R1
0057   30FF           06332 pauseloop movlw -1              ; 1 (9)
0058   07A2           06333         addwf   R1, F           ; 1
0059   1C03           06334         btfss   STATUS, C       ; 1 / 2
005A   07A3           06335         addwf   R1 + 1, F       ; 1 / 0
005B   1C03           06336         btfss   STATUS, C       ; 2
005C   2877           06337         goto    DONE
005D   3003           06338         movlw   (PAUSE_DELAY) >> 8      ; 1
005E   00A1           06339         movwf   R0 + 1          ; 1
005F   30DF           06340         movlw   low (PAUSE_DELAY)       ; 1
0060   2063           06341         call    PAUSEUSL        ; -2 (PAUSEUSL gives you 2 less than you ask for)
0061   2857           06342         goto    pauseloop       ; 2
                      06386   LIST
0062   01A1           06387 PAUSEUS clrf    R0 + 1          ; 1
0063   3EE8           06388 PAUSEUSL addlw  -24             ; 1 Subtract overhead
0064   00A0           06389         movwf   R0              ; 1
0065   09A1           06390         comf    R0 + 1, F       ; 1
0066   30FC           06391         movlw   -4              ; 1
0067   1C03           06392         btfss   STATUS, C       ; 1 / 2
0068   286C           06393         goto    pauseush        ; 2 / 0
0069   07A0           06394 pauseusloop addwf R0, F         ; 1
006A   1803           06395         btfsc   STATUS, C       ; 1 / 2
006B   2869           06396         goto    pauseusloop     ; 2 / 0
006C   07A0           06397 pauseush addwf  R0, F           ; 1 Do an extra countdown
                      06398         CLRWDT?NOP              ; 1 Keep Watchdog clear
                          M     ifndef NO_CLRWDT
006D   0064               M         clrwdt
                          M     else
                          M         nop
                          M     endif
006E   0FA1           06399         incfsz  R0 + 1, F       ; 1 / 2
006F   2869           06400         goto    pauseusloop     ; 2 / 0
0070   1820           06401         btfsc   R0, 0           ; 1 / 2
0071   2872           06402         goto    $ + 1           ; 2 / 0 Burn an extra cycle
0072   1CA0           06403         btfss   R0, 1           ; 1 / 2
0073   2876           06404         goto    pauseusdone     ; 2 / 0
MPASM  5.44                      LCDAND~1.ASM   4-16-2020  23:11:52         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0074   0000           06405         nop                     ; 1
0075   2876           06406         goto    $ + 1           ; 2 Burn an extra 2 cycles
0076   0008           06407 pauseusdone return              ; 2 + 3 (call + setup)
                      07766   LIST
0077   1383           07767 DONE    bcf     STATUS, IRP     ; 1 Set FSR to bank 0/1
0078   1303           07768         bcf     STATUS, RP1     ; 1 Show direct bank 0
0079   1283           07769         bcf     STATUS, RP0     ; 1
                      07770         CLRWDT?NOP              ; 1 Hit Watchdog timer
                          M     ifndef NO_CLRWDT
007A   0064               M         clrwdt
                          M     else
                          M         nop
                          M     endif
007B   0008           07771 DONERET return                  ; 2 Done
                      07797   LIST
007C                  07798 INIT
                      07801   LIST
                      07802         MOVE?CB HSER_SPBRG, SPBRG       ; Set baud rate generator reg
                          M         CHK?RP  SPBRG
                          M     if (((SPBRG) & 180h) == 0)
                          M       if (PREV_BANK == 1)
                          M         bcf     STATUS, RP0
                          M       endif
                          M       if (PREV_BANK == 2)
                          M         bcf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 3)
                          M         bcf     STATUS, RP0
                          M         bcf     STATUS, RP1
                          M       endif
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     if (((SPBRG) & 180h) == 80h)
                          M       if (PREV_BANK == 0)
007C   1683               M         bsf     STATUS, RP0
                          M       endif
                          M       if (PREV_BANK == 2)
                          M         bsf     STATUS, RP0
                          M         bcf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 3)
                          M         bcf     STATUS, RP1
                          M       endif
  00000001                M PREV_BANK = 1
                          M     endif
                          M 
                          M     if (((SPBRG) & 180h) == 100h)
                          M       if (PREV_BANK == 0)
                          M         bsf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 1)
                          M         bcf     STATUS, RP0
MPASM  5.44                      LCDAND~1.ASM   4-16-2020  23:11:52         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         bsf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 3)
                          M         bcf     STATUS, RP0
                          M       endif
                          M PREV_BANK = 2
                          M     endif
                          M 
                          M     if (((SPBRG) & 180h) == 180h)
                          M       if (PREV_BANK == 0)
                          M         bsf     STATUS, RP0
                          M         bsf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 1)
                          M         bsf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 2)
                          M         bsf     STATUS, RP0
                          M       endif
                          M PREV_BANK = 3
                          M     endif
                          M     if (low (HSER_SPBRG) == 0)
                          M         clrf    SPBRG
                          M     else
007D   3019               M         movlw   low (HSER_SPBRG)
007E   0099               M         movwf   SPBRG
                          M     endif
                      07803     ifdef HSER_SPBRGH
                      07804       ifdef SPBRGH
                      07805         MOVE?CB HSER_SPBRGH, SPBRGH     ; Set baud rate generator reg high
                      07806       endif
                      07807     endif
                      07808         MOVE?CB HSER_TXSTA, TXSTA       ; Set transmit control reg
                          M         CHK?RP  TXSTA
                          M     if (((TXSTA) & 180h) == 0)
                          M       if (PREV_BANK == 1)
                          M         bcf     STATUS, RP0
                          M       endif
                          M       if (PREV_BANK == 2)
                          M         bcf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 3)
                          M         bcf     STATUS, RP0
                          M         bcf     STATUS, RP1
                          M       endif
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     if (((TXSTA) & 180h) == 80h)
                          M       if (PREV_BANK == 0)
                          M         bsf     STATUS, RP0
                          M       endif
                          M       if (PREV_BANK == 2)
MPASM  5.44                      LCDAND~1.ASM   4-16-2020  23:11:52         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         bsf     STATUS, RP0
                          M         bcf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 3)
                          M         bcf     STATUS, RP1
                          M       endif
  00000001                M PREV_BANK = 1
                          M     endif
                          M 
                          M     if (((TXSTA) & 180h) == 100h)
                          M       if (PREV_BANK == 0)
                          M         bsf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 1)
                          M         bcf     STATUS, RP0
                          M         bsf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 3)
                          M         bcf     STATUS, RP0
                          M       endif
                          M PREV_BANK = 2
                          M     endif
                          M 
                          M     if (((TXSTA) & 180h) == 180h)
                          M       if (PREV_BANK == 0)
                          M         bsf     STATUS, RP0
                          M         bsf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 1)
                          M         bsf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 2)
                          M         bsf     STATUS, RP0
                          M       endif
                          M PREV_BANK = 3
                          M     endif
                          M     if (low (24h) == 0)
                          M         clrf    TXSTA
                          M     else
007F   3024               M         movlw   low (24h)
0080   0098               M         movwf   TXSTA
                          M     endif
                      07809         MOVE?CB HSER_RCSTA, RCSTA       ; Set receive control reg
                          M         CHK?RP  RCSTA
                          M     if (((RCSTA) & 180h) == 0)
                          M       if (PREV_BANK == 1)
0081   1283               M         bcf     STATUS, RP0
                          M       endif
                          M       if (PREV_BANK == 2)
                          M         bcf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 3)
                          M         bcf     STATUS, RP0
MPASM  5.44                      LCDAND~1.ASM   4-16-2020  23:11:52         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         bcf     STATUS, RP1
                          M       endif
  00000000                M PREV_BANK = 0
                          M     endif
                          M 
                          M     if (((RCSTA) & 180h) == 80h)
                          M       if (PREV_BANK == 0)
                          M         bsf     STATUS, RP0
                          M       endif
                          M       if (PREV_BANK == 2)
                          M         bsf     STATUS, RP0
                          M         bcf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 3)
                          M         bcf     STATUS, RP1
                          M       endif
                          M PREV_BANK = 1
                          M     endif
                          M 
                          M     if (((RCSTA) & 180h) == 100h)
                          M       if (PREV_BANK == 0)
                          M         bsf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 1)
                          M         bcf     STATUS, RP0
                          M         bsf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 3)
                          M         bcf     STATUS, RP0
                          M       endif
                          M PREV_BANK = 2
                          M     endif
                          M 
                          M     if (((RCSTA) & 180h) == 180h)
                          M       if (PREV_BANK == 0)
                          M         bsf     STATUS, RP0
                          M         bsf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 1)
                          M         bsf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 2)
                          M         bsf     STATUS, RP0
                          M       endif
                          M PREV_BANK = 3
                          M     endif
                          M     if (low (90h) == 0)
                          M         clrf    RCSTA
                          M     else
0082   3090               M         movlw   low (90h)
0083   0098               M         movwf   RCSTA
                          M     endif
                      07836   LIST
MPASM  5.44                      LCDAND~1.ASM   4-16-2020  23:11:52         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0084                  07837 main
                      00091 
                      00092 
                      00093 ; C:\PBP\16F877.BAS             00012   BANK0   $0020, $007F
                      00094 ; C:\PBP\16F877.BAS             00013   BANK1   $00A0, $00EF
                      00095 ; C:\PBP\16F877.BAS             00014   BANK2   $0110, $016F
                      00096 ; C:\PBP\16F877.BAS             00015   BANK3   $0190, $01EF
                      00097 ; C:\PBP\16F877.BAS             00016   EEPROM  $2100, $21FF
                      00098 ; C:\PBP\16F877.BAS             00017   LIBRARY "PBPPIC14"
                      00099 ; C:\PBP\16F877.BAS             00018   DEFINE  CODE_SIZE 8
                      00100 
                      00101 ; C:\PBP\16F877.BAS             00020           include "PIC14EXT.BAS"
                      00102 
                      00103 ; C:\PBP\16F877.BAS             00027           include "PBPPIC14.RAM"
                      00104 ; C:\PBP\LCDAND~1.PBP           00001   define HSER_RCSTA 90h
                      00105 ; C:\PBP\LCDAND~1.PBP           00002   DEFINE HSER_TXSTA 24h
                      00106 ; C:\PBP\LCDAND~1.PBP           00003   DEFINE HSER_BAUD 9600    'terminaldeki haberleþme hýzý
                      00107 ; C:\PBP\LCDAND~1.PBP           00004   DEFINE HSER_CLROERR 1
                      00108 ; C:\PBP\LCDAND~1.PBP           00006   DEFINE LCD_DREG PORTD           'LCD data portunun baglandigi pi
                            c portu 
                      00109 ; C:\PBP\LCDAND~1.PBP           00007   DEFINE LCD_DBIT 0                        '4-bit bus için data bi
                            t(0yada4) baslangiç
                      00110 ; C:\PBP\LCDAND~1.PBP           00008   DEFINE LCD_RSREG PORTE          'LCD RS in baglandigi pic portu 
                      00111 ; C:\PBP\LCDAND~1.PBP           00009   DEFINE LCD_RSBIT 0                      'RS in baglandigi pic po
                            rtE nin bit numarasi
                      00112 ; C:\PBP\LCDAND~1.PBP           00010   DEFINE LCD_EREG PORTE            'LCD E nin baglandigi pic portu
                             
                      00113 ; C:\PBP\LCDAND~1.PBP           00011   DEFINE LCD_EBIT 2                        'LCD E nin baglandigi p
                            ic portE nin bit numarasi
                      00114 ; C:\PBP\LCDAND~1.PBP           00012   DEFINE LCD_BITS 8                             'PortD nin 8 biti 
                            veri transferi için kullanildi
                      00115 
                      00116 ; C:\PBP\LCDAND~1.PBP           00013   TRISE=%000                                       'Aslinda PortE.
                            1 direkt topraga çekilse olurdu ama 
                      00117         MOVE?CB 000h, TRISE
                          M         CHK?RP  TRISE
                          M     if (((TRISE) & 180h) == 0)
                          M       if (PREV_BANK == 1)
                          M         bcf     STATUS, RP0
                          M       endif
                          M       if (PREV_BANK == 2)
                          M         bcf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 3)
                          M         bcf     STATUS, RP0
                          M         bcf     STATUS, RP1
                          M       endif
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     if (((TRISE) & 180h) == 80h)
                          M       if (PREV_BANK == 0)
0084   1683               M         bsf     STATUS, RP0
MPASM  5.44                      LCDAND~1.ASM   4-16-2020  23:11:52         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       endif
                          M       if (PREV_BANK == 2)
                          M         bsf     STATUS, RP0
                          M         bcf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 3)
                          M         bcf     STATUS, RP1
                          M       endif
  00000001                M PREV_BANK = 1
                          M     endif
                          M 
                          M     if (((TRISE) & 180h) == 100h)
                          M       if (PREV_BANK == 0)
                          M         bsf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 1)
                          M         bcf     STATUS, RP0
                          M         bsf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 3)
                          M         bcf     STATUS, RP0
                          M       endif
                          M PREV_BANK = 2
                          M     endif
                          M 
                          M     if (((TRISE) & 180h) == 180h)
                          M       if (PREV_BANK == 0)
                          M         bsf     STATUS, RP0
                          M         bsf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 1)
                          M         bsf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 2)
                          M         bsf     STATUS, RP0
                          M       endif
                          M PREV_BANK = 3
                          M     endif
                          M     if (low (000h) == 0)
0085   0189               M         clrf    TRISE
                          M     else
                          M         movlw   low (000h)
                          M         movwf   TRISE
                          M     endif
                      00118 
                      00119 ; C:\PBP\LCDAND~1.PBP           00014   PortE.1=0                                             ' PortE.1=
                            0 olarak yaptik
                      00120         MOVE?CT 000h, _PORTE??1
                          M         CHK?RP  PORTE
                          M     if (((PORTE) & 180h) == 0)
                          M       if (PREV_BANK == 1)
0086   1283               M         bcf     STATUS, RP0
                          M       endif
MPASM  5.44                      LCDAND~1.ASM   4-16-2020  23:11:52         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       if (PREV_BANK == 2)
                          M         bcf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 3)
                          M         bcf     STATUS, RP0
                          M         bcf     STATUS, RP1
                          M       endif
  00000000                M PREV_BANK = 0
                          M     endif
                          M 
                          M     if (((PORTE) & 180h) == 80h)
                          M       if (PREV_BANK == 0)
                          M         bsf     STATUS, RP0
                          M       endif
                          M       if (PREV_BANK == 2)
                          M         bsf     STATUS, RP0
                          M         bcf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 3)
                          M         bcf     STATUS, RP1
                          M       endif
                          M PREV_BANK = 1
                          M     endif
                          M 
                          M     if (((PORTE) & 180h) == 100h)
                          M       if (PREV_BANK == 0)
                          M         bsf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 1)
                          M         bcf     STATUS, RP0
                          M         bsf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 3)
                          M         bcf     STATUS, RP0
                          M       endif
                          M PREV_BANK = 2
                          M     endif
                          M 
                          M     if (((PORTE) & 180h) == 180h)
                          M       if (PREV_BANK == 0)
                          M         bsf     STATUS, RP0
                          M         bsf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 1)
                          M         bsf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 2)
                          M         bsf     STATUS, RP0
                          M       endif
                          M PREV_BANK = 3
                          M     endif
                          M     if (((000h) & 1) == 1)
                          M         bsf     PORTE,  001h
MPASM  5.44                      LCDAND~1.ASM   4-16-2020  23:11:52         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     else
0087   1089               M         bcf     PORTE,  001h
                          M     endif
                      00121 
                      00122 ; C:\PBP\LCDAND~1.PBP           00015   ADCON1=7                                         'porta ve porte
                             yi dijitale ayarla
                      00123         MOVE?CB 007h, ADCON1
                          M         CHK?RP  ADCON1
                          M     if (((ADCON1) & 180h) == 0)
                          M       if (PREV_BANK == 1)
                          M         bcf     STATUS, RP0
                          M       endif
                          M       if (PREV_BANK == 2)
                          M         bcf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 3)
                          M         bcf     STATUS, RP0
                          M         bcf     STATUS, RP1
                          M       endif
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     if (((ADCON1) & 180h) == 80h)
                          M       if (PREV_BANK == 0)
0088   1683               M         bsf     STATUS, RP0
                          M       endif
                          M       if (PREV_BANK == 2)
                          M         bsf     STATUS, RP0
                          M         bcf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 3)
                          M         bcf     STATUS, RP1
                          M       endif
  00000001                M PREV_BANK = 1
                          M     endif
                          M 
                          M     if (((ADCON1) & 180h) == 100h)
                          M       if (PREV_BANK == 0)
                          M         bsf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 1)
                          M         bcf     STATUS, RP0
                          M         bsf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 3)
                          M         bcf     STATUS, RP0
                          M       endif
                          M PREV_BANK = 2
                          M     endif
                          M 
                          M     if (((ADCON1) & 180h) == 180h)
                          M       if (PREV_BANK == 0)
                          M         bsf     STATUS, RP0
MPASM  5.44                      LCDAND~1.ASM   4-16-2020  23:11:52         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         bsf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 1)
                          M         bsf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 2)
                          M         bsf     STATUS, RP0
                          M       endif
                          M PREV_BANK = 3
                          M     endif
                          M     if (low (007h) == 0)
                          M         clrf    ADCON1
                          M     else
0089   3007               M         movlw   low (007h)
008A   009F               M         movwf   ADCON1
                          M     endif
                      00124 
                      00125 ; C:\PBP\LCDAND~1.PBP           00016   PAUSE 100
                      00126         PAUSE?C 064h
                          M     if (((064h) >> 8) == 0)
                          M         MOVE?CA 064h
008B   3064               M         movlw   low (064h)
                          M         L?CALL  PAUSE
                          M         RST?RP
                          M     if ((PREV_BANK & 1) != 0)
008C   1283               M         bcf     STATUS, RP0
                          M     endif
                          M     if ((PREV_BANK & 2) != 0)
                          M         bcf     STATUS, RP1
                          M     endif
  00000000                M PREV_BANK = 0
                          M 
                          M     ifdef USE_LINKER
                          M       if (CODE_SIZE > 2)
                          M         pagesel PAUSE
                          M       endif
                          M     else
                          M       if ((PAUSE) < 1)
                          M         if (CODE_SIZE > 2)
                          M           if (((PAUSE) & 800h) == 0)
                          M         bcf     PCLATH, 3
                          M         else
                          M         bsf     PCLATH, 3
                          M         endif
                          M         endif
                          M         if (CODE_SIZE > 4)
                          M           if (((PAUSE) & 1000h) == 0)
                          M         bcf     PCLATH, 4
                          M           else
                          M         bsf     PCLATH, 4
                          M           endif
                          M         endif
                          M       else
MPASM  5.44                      LCDAND~1.ASM   4-16-2020  23:11:52         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         if ((PAUSE) > $)
                          M           if (CODE_SIZE > 2)
                          M             if (((PAUSE) & 800h) == 0)
                          M         bcf     PCLATH, 3
                          M             else
                          M         bsf     PCLATH, 3
                          M             endif
                          M           endif
                          M           if (CODE_SIZE > 4)
                          M             if (((PAUSE) & 1000h) == 0)
                          M         bcf     PCLATH, 4
                          M             else
                          M         bsf     PCLATH, 4
                          M             endif
                          M           endif
                          M         else
                          M           if (CODE_SIZE > 2)
                          M             if (((PAUSE) & 1800h) == 0)
008D   018A               M         clrf    PCLATH
                          M             else
                          M               if (((PAUSE) & 800h) == 0)
                          M         bcf     PCLATH, 3
                          M               else
                          M         bsf     PCLATH, 3
                          M               endif
                          M               if (CODE_SIZE > 4)
                          M                 if (((PAUSE) & 1000h) == 0)
                          M         bcf     PCLATH, 4
                          M                 else
                          M         bsf     PCLATH, 4
                          M                 endif   
                          M               endif
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M 
008E   2055               M         call    PAUSE
                          M     else
                          M         MOVE?CB (064h) >> 8, R1 + 1
                          M         MOVE?CA low (064h)
                          M         L?CALL  PAUSEL
                          M     endif
                      00127 
                      00128 ; C:\PBP\LCDAND~1.PBP           00020   label:
                      00129 
                      00130         LABEL?L _label  
                          M         RST?RP
                          M     if ((PREV_BANK & 1) != 0)
                          M         bcf     STATUS, RP0
                          M     endif
                          M     if ((PREV_BANK & 2) != 0)
MPASM  5.44                      LCDAND~1.ASM   4-16-2020  23:11:52         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         bcf     STATUS, RP1
                          M     endif
  00000000                M PREV_BANK = 0
                          M     ifdef PM_USED
                          M         LALL
                          M _label
                          M         XALL
                          M     else
008F                      M _label
                          M     endif
                      00131 
                      00132 ; C:\PBP\LCDAND~1.PBP           00021   hserin[x] 'terminale girilen deðeri alýr
                      00133         HSERIN?B        _x
                          M         L?CALL  HSERIN
                          M         RST?RP
                          M     if ((PREV_BANK & 1) != 0)
                          M         bcf     STATUS, RP0
                          M     endif
                          M     if ((PREV_BANK & 2) != 0)
                          M         bcf     STATUS, RP1
                          M     endif
  00000000                M PREV_BANK = 0
                          M 
                          M     ifdef USE_LINKER
                          M       if (CODE_SIZE > 2)
                          M         pagesel HSERIN
                          M       endif
                          M     else
                          M       if ((HSERIN) < 1)
                          M         if (CODE_SIZE > 2)
                          M           if (((HSERIN) & 800h) == 0)
                          M         bcf     PCLATH, 3
                          M         else
                          M         bsf     PCLATH, 3
                          M         endif
                          M         endif
                          M         if (CODE_SIZE > 4)
                          M           if (((HSERIN) & 1000h) == 0)
                          M         bcf     PCLATH, 4
                          M           else
                          M         bsf     PCLATH, 4
                          M           endif
                          M         endif
                          M       else
                          M         if ((HSERIN) > $)
                          M           if (CODE_SIZE > 2)
                          M             if (((HSERIN) & 800h) == 0)
                          M         bcf     PCLATH, 3
                          M             else
                          M         bsf     PCLATH, 3
                          M             endif
                          M           endif
                          M           if (CODE_SIZE > 4)
MPASM  5.44                      LCDAND~1.ASM   4-16-2020  23:11:52         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M             if (((HSERIN) & 1000h) == 0)
                          M         bcf     PCLATH, 4
                          M             else
                          M         bsf     PCLATH, 4
                          M             endif
                          M           endif
                          M         else
                          M           if (CODE_SIZE > 2)
                          M             if (((HSERIN) & 1800h) == 0)
008F   018A               M         clrf    PCLATH
                          M             else
                          M               if (((HSERIN) & 800h) == 0)
                          M         bcf     PCLATH, 3
                          M               else
                          M         bsf     PCLATH, 3
                          M               endif
                          M               if (CODE_SIZE > 4)
                          M                 if (((HSERIN) & 1000h) == 0)
                          M         bcf     PCLATH, 4
                          M                 else
                          M         bsf     PCLATH, 4
                          M                 endif   
                          M               endif
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M 
0090   2002               M         call    HSERIN
                          M         MOVE?AB _x
                          M         CHK?RP  _x
                          M     if (((_x)    & 180h) == 0)
                          M       if (PREV_BANK == 1)
                          M         bcf     STATUS, RP0
                          M       endif
                          M       if (PREV_BANK == 2)
                          M         bcf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 3)
                          M         bcf     STATUS, RP0
                          M         bcf     STATUS, RP1
                          M       endif
  00000000                M PREV_BANK = 0
                          M     endif
                          M 
                          M     if (((_x)    & 180h) == 80h)
                          M       if (PREV_BANK == 0)
                          M         bsf     STATUS, RP0
                          M       endif
                          M       if (PREV_BANK == 2)
                          M         bsf     STATUS, RP0
                          M         bcf     STATUS, RP1
MPASM  5.44                      LCDAND~1.ASM   4-16-2020  23:11:52         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       endif
                          M       if (PREV_BANK == 3)
                          M         bcf     STATUS, RP1
                          M       endif
                          M PREV_BANK = 1
                          M     endif
                          M 
                          M     if (((_x)    & 180h) == 100h)
                          M       if (PREV_BANK == 0)
                          M         bsf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 1)
                          M         bcf     STATUS, RP0
                          M         bsf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 3)
                          M         bcf     STATUS, RP0
                          M       endif
                          M PREV_BANK = 2
                          M     endif
                          M 
                          M     if (((_x)    & 180h) == 180h)
                          M       if (PREV_BANK == 0)
                          M         bsf     STATUS, RP0
                          M         bsf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 1)
                          M         bsf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 2)
                          M         bsf     STATUS, RP0
                          M       endif
                          M PREV_BANK = 3
                          M     endif
0091   00B8               M         movwf   _x
                      00134 
                      00135 ; C:\PBP\LCDAND~1.PBP           00022   hserout[x] 'terminale yazdýr
                      00136         HSEROUT?B       _x
                          M         MOVE?BA _x
                          M         CHK?RP  _x
                          M     if (((_x)    & 180h) == 0)
                          M       if (PREV_BANK == 1)
                          M         bcf     STATUS, RP0
                          M       endif
                          M       if (PREV_BANK == 2)
                          M         bcf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 3)
                          M         bcf     STATUS, RP0
                          M         bcf     STATUS, RP1
                          M       endif
  00000000                M PREV_BANK = 0
                          M     endif
MPASM  5.44                      LCDAND~1.ASM   4-16-2020  23:11:52         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M 
                          M     if (((_x)    & 180h) == 80h)
                          M       if (PREV_BANK == 0)
                          M         bsf     STATUS, RP0
                          M       endif
                          M       if (PREV_BANK == 2)
                          M         bsf     STATUS, RP0
                          M         bcf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 3)
                          M         bcf     STATUS, RP1
                          M       endif
                          M PREV_BANK = 1
                          M     endif
                          M 
                          M     if (((_x)    & 180h) == 100h)
                          M       if (PREV_BANK == 0)
                          M         bsf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 1)
                          M         bcf     STATUS, RP0
                          M         bsf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 3)
                          M         bcf     STATUS, RP0
                          M       endif
                          M PREV_BANK = 2
                          M     endif
                          M 
                          M     if (((_x)    & 180h) == 180h)
                          M       if (PREV_BANK == 0)
                          M         bsf     STATUS, RP0
                          M         bsf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 1)
                          M         bsf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 2)
                          M         bsf     STATUS, RP0
                          M       endif
                          M PREV_BANK = 3
                          M     endif
0092   0838               M         movf    _x,  W
                          M         L?CALL  HSEROUT
                          M         RST?RP
                          M     if ((PREV_BANK & 1) != 0)
                          M         bcf     STATUS, RP0
                          M     endif
                          M     if ((PREV_BANK & 2) != 0)
                          M         bcf     STATUS, RP1
                          M     endif
  00000000                M PREV_BANK = 0
                          M 
MPASM  5.44                      LCDAND~1.ASM   4-16-2020  23:11:52         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     ifdef USE_LINKER
                          M       if (CODE_SIZE > 2)
                          M         pagesel HSEROUT
                          M       endif
                          M     else
                          M       if ((HSEROUT) < 1)
                          M         if (CODE_SIZE > 2)
                          M           if (((HSEROUT) & 800h) == 0)
                          M         bcf     PCLATH, 3
                          M         else
                          M         bsf     PCLATH, 3
                          M         endif
                          M         endif
                          M         if (CODE_SIZE > 4)
                          M           if (((HSEROUT) & 1000h) == 0)
                          M         bcf     PCLATH, 4
                          M           else
                          M         bsf     PCLATH, 4
                          M           endif
                          M         endif
                          M       else
                          M         if ((HSEROUT) > $)
                          M           if (CODE_SIZE > 2)
                          M             if (((HSEROUT) & 800h) == 0)
                          M         bcf     PCLATH, 3
                          M             else
                          M         bsf     PCLATH, 3
                          M             endif
                          M           endif
                          M           if (CODE_SIZE > 4)
                          M             if (((HSEROUT) & 1000h) == 0)
                          M         bcf     PCLATH, 4
                          M             else
                          M         bsf     PCLATH, 4
                          M             endif
                          M           endif
                          M         else
                          M           if (CODE_SIZE > 2)
                          M             if (((HSEROUT) & 1800h) == 0)
0093   018A               M         clrf    PCLATH
                          M             else
                          M               if (((HSEROUT) & 800h) == 0)
                          M         bcf     PCLATH, 3
                          M               else
                          M         bsf     PCLATH, 3
                          M               endif
                          M               if (CODE_SIZE > 4)
                          M                 if (((HSEROUT) & 1000h) == 0)
                          M         bcf     PCLATH, 4
                          M                 else
                          M         bsf     PCLATH, 4
                          M                 endif   
                          M               endif
MPASM  5.44                      LCDAND~1.ASM   4-16-2020  23:11:52         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M 
0094   200B               M         call    HSEROUT
                      00137 
                      00138 ; C:\PBP\LCDAND~1.PBP           00023   lcdout $fe,1,x
                      00139         LCDOUT?C        0FEh
0095   30FE               M         movlw   0FEh
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if ((PREV_BANK & 1) != 0)
                          M         bcf     STATUS, RP0
                          M     endif
                          M     if ((PREV_BANK & 2) != 0)
                          M         bcf     STATUS, RP1
                          M     endif
  00000000                M PREV_BANK = 0
                          M 
                          M     ifdef USE_LINKER
                          M       if (CODE_SIZE > 2)
                          M         pagesel LCDOUT
                          M       endif
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         if (CODE_SIZE > 2)
                          M           if (((LCDOUT) & 800h) == 0)
                          M         bcf     PCLATH, 3
                          M         else
                          M         bsf     PCLATH, 3
                          M         endif
                          M         endif
                          M         if (CODE_SIZE > 4)
                          M           if (((LCDOUT) & 1000h) == 0)
                          M         bcf     PCLATH, 4
                          M           else
                          M         bsf     PCLATH, 4
                          M           endif
                          M         endif
                          M       else
                          M         if ((LCDOUT) > $)
                          M           if (CODE_SIZE > 2)
                          M             if (((LCDOUT) & 800h) == 0)
                          M         bcf     PCLATH, 3
                          M             else
                          M         bsf     PCLATH, 3
                          M             endif
                          M           endif
                          M           if (CODE_SIZE > 4)
                          M             if (((LCDOUT) & 1000h) == 0)
                          M         bcf     PCLATH, 4
MPASM  5.44                      LCDAND~1.ASM   4-16-2020  23:11:52         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M             else
                          M         bsf     PCLATH, 4
                          M             endif
                          M           endif
                          M         else
                          M           if (CODE_SIZE > 2)
                          M             if (((LCDOUT) & 1800h) == 0)
0096   018A               M         clrf    PCLATH
                          M             else
                          M               if (((LCDOUT) & 800h) == 0)
                          M         bcf     PCLATH, 3
                          M               else
                          M         bsf     PCLATH, 3
                          M               endif
                          M               if (CODE_SIZE > 4)
                          M                 if (((LCDOUT) & 1000h) == 0)
                          M         bcf     PCLATH, 4
                          M                 else
                          M         bsf     PCLATH, 4
                          M                 endif   
                          M               endif
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M 
0097   2011               M         call    LCDOUT
                      00140         LCDOUT?C        001h
0098   3001               M         movlw   001h
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if ((PREV_BANK & 1) != 0)
                          M         bcf     STATUS, RP0
                          M     endif
                          M     if ((PREV_BANK & 2) != 0)
                          M         bcf     STATUS, RP1
                          M     endif
  00000000                M PREV_BANK = 0
                          M 
                          M     ifdef USE_LINKER
                          M       if (CODE_SIZE > 2)
                          M         pagesel LCDOUT
                          M       endif
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         if (CODE_SIZE > 2)
                          M           if (((LCDOUT) & 800h) == 0)
                          M         bcf     PCLATH, 3
                          M         else
                          M         bsf     PCLATH, 3
                          M         endif
                          M         endif
MPASM  5.44                      LCDAND~1.ASM   4-16-2020  23:11:52         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         if (CODE_SIZE > 4)
                          M           if (((LCDOUT) & 1000h) == 0)
                          M         bcf     PCLATH, 4
                          M           else
                          M         bsf     PCLATH, 4
                          M           endif
                          M         endif
                          M       else
                          M         if ((LCDOUT) > $)
                          M           if (CODE_SIZE > 2)
                          M             if (((LCDOUT) & 800h) == 0)
                          M         bcf     PCLATH, 3
                          M             else
                          M         bsf     PCLATH, 3
                          M             endif
                          M           endif
                          M           if (CODE_SIZE > 4)
                          M             if (((LCDOUT) & 1000h) == 0)
                          M         bcf     PCLATH, 4
                          M             else
                          M         bsf     PCLATH, 4
                          M             endif
                          M           endif
                          M         else
                          M           if (CODE_SIZE > 2)
                          M             if (((LCDOUT) & 1800h) == 0)
0099   018A               M         clrf    PCLATH
                          M             else
                          M               if (((LCDOUT) & 800h) == 0)
                          M         bcf     PCLATH, 3
                          M               else
                          M         bsf     PCLATH, 3
                          M               endif
                          M               if (CODE_SIZE > 4)
                          M                 if (((LCDOUT) & 1000h) == 0)
                          M         bcf     PCLATH, 4
                          M                 else
                          M         bsf     PCLATH, 4
                          M                 endif   
                          M               endif
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M 
009A   2011               M         call    LCDOUT
                      00141         LCDOUT?B        _x
                          M         MOVE?BA _x
                          M         CHK?RP  _x
                          M     if (((_x)    & 180h) == 0)
                          M       if (PREV_BANK == 1)
                          M         bcf     STATUS, RP0
MPASM  5.44                      LCDAND~1.ASM   4-16-2020  23:11:52         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       endif
                          M       if (PREV_BANK == 2)
                          M         bcf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 3)
                          M         bcf     STATUS, RP0
                          M         bcf     STATUS, RP1
                          M       endif
  00000000                M PREV_BANK = 0
                          M     endif
                          M 
                          M     if (((_x)    & 180h) == 80h)
                          M       if (PREV_BANK == 0)
                          M         bsf     STATUS, RP0
                          M       endif
                          M       if (PREV_BANK == 2)
                          M         bsf     STATUS, RP0
                          M         bcf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 3)
                          M         bcf     STATUS, RP1
                          M       endif
                          M PREV_BANK = 1
                          M     endif
                          M 
                          M     if (((_x)    & 180h) == 100h)
                          M       if (PREV_BANK == 0)
                          M         bsf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 1)
                          M         bcf     STATUS, RP0
                          M         bsf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 3)
                          M         bcf     STATUS, RP0
                          M       endif
                          M PREV_BANK = 2
                          M     endif
                          M 
                          M     if (((_x)    & 180h) == 180h)
                          M       if (PREV_BANK == 0)
                          M         bsf     STATUS, RP0
                          M         bsf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 1)
                          M         bsf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 2)
                          M         bsf     STATUS, RP0
                          M       endif
                          M PREV_BANK = 3
                          M     endif
009B   0838               M         movf    _x,  W
MPASM  5.44                      LCDAND~1.ASM   4-16-2020  23:11:52         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if ((PREV_BANK & 1) != 0)
                          M         bcf     STATUS, RP0
                          M     endif
                          M     if ((PREV_BANK & 2) != 0)
                          M         bcf     STATUS, RP1
                          M     endif
  00000000                M PREV_BANK = 0
                          M 
                          M     ifdef USE_LINKER
                          M       if (CODE_SIZE > 2)
                          M         pagesel LCDOUT
                          M       endif
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         if (CODE_SIZE > 2)
                          M           if (((LCDOUT) & 800h) == 0)
                          M         bcf     PCLATH, 3
                          M         else
                          M         bsf     PCLATH, 3
                          M         endif
                          M         endif
                          M         if (CODE_SIZE > 4)
                          M           if (((LCDOUT) & 1000h) == 0)
                          M         bcf     PCLATH, 4
                          M           else
                          M         bsf     PCLATH, 4
                          M           endif
                          M         endif
                          M       else
                          M         if ((LCDOUT) > $)
                          M           if (CODE_SIZE > 2)
                          M             if (((LCDOUT) & 800h) == 0)
                          M         bcf     PCLATH, 3
                          M             else
                          M         bsf     PCLATH, 3
                          M             endif
                          M           endif
                          M           if (CODE_SIZE > 4)
                          M             if (((LCDOUT) & 1000h) == 0)
                          M         bcf     PCLATH, 4
                          M             else
                          M         bsf     PCLATH, 4
                          M             endif
                          M           endif
                          M         else
                          M           if (CODE_SIZE > 2)
                          M             if (((LCDOUT) & 1800h) == 0)
009C   018A               M         clrf    PCLATH
                          M             else
                          M               if (((LCDOUT) & 800h) == 0)
                          M         bcf     PCLATH, 3
MPASM  5.44                      LCDAND~1.ASM   4-16-2020  23:11:52         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M               else
                          M         bsf     PCLATH, 3
                          M               endif
                          M               if (CODE_SIZE > 4)
                          M                 if (((LCDOUT) & 1000h) == 0)
                          M         bcf     PCLATH, 4
                          M                 else
                          M         bsf     PCLATH, 4
                          M                 endif   
                          M               endif
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M 
009D   2011               M         call    LCDOUT
                      00142 
                      00143 ; C:\PBP\LCDAND~1.PBP           00024   pause 500
                      00144         PAUSE?C 001F4h
                          M     if (((001F4h) >> 8) == 0)
                          M         MOVE?CA 001F4h
                          M         L?CALL  PAUSE
                          M     else
                          M         MOVE?CB (001F4h) >> 8, R1 + 1
                          M         CHK?RP  R1 + 1
                          M     if (((R1 + 1) & 180h) == 0)
                          M       if (PREV_BANK == 1)
                          M         bcf     STATUS, RP0
                          M       endif
                          M       if (PREV_BANK == 2)
                          M         bcf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 3)
                          M         bcf     STATUS, RP0
                          M         bcf     STATUS, RP1
                          M       endif
  00000000                M PREV_BANK = 0
                          M     endif
                          M 
                          M     if (((R1 + 1) & 180h) == 80h)
                          M       if (PREV_BANK == 0)
                          M         bsf     STATUS, RP0
                          M       endif
                          M       if (PREV_BANK == 2)
                          M         bsf     STATUS, RP0
                          M         bcf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 3)
                          M         bcf     STATUS, RP1
                          M       endif
                          M PREV_BANK = 1
                          M     endif
MPASM  5.44                      LCDAND~1.ASM   4-16-2020  23:11:52         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M 
                          M     if (((R1 + 1) & 180h) == 100h)
                          M       if (PREV_BANK == 0)
                          M         bsf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 1)
                          M         bcf     STATUS, RP0
                          M         bsf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 3)
                          M         bcf     STATUS, RP0
                          M       endif
                          M PREV_BANK = 2
                          M     endif
                          M 
                          M     if (((R1 + 1) & 180h) == 180h)
                          M       if (PREV_BANK == 0)
                          M         bsf     STATUS, RP0
                          M         bsf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 1)
                          M         bsf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 2)
                          M         bsf     STATUS, RP0
                          M       endif
                          M PREV_BANK = 3
                          M     endif
                          M     if (low ((001F4h) >> 8) == 0)
                          M         clrf    R1 + 1
                          M     else
009E   3001               M         movlw   low ((001F4h) >> 8)
009F   00A3               M         movwf   R1 + 1
                          M     endif
                          M         MOVE?CA low (001F4h)
00A0   30F4               M         movlw   low (low (001F4h))
                          M         L?CALL  PAUSEL
                          M         RST?RP
                          M     if ((PREV_BANK & 1) != 0)
                          M         bcf     STATUS, RP0
                          M     endif
                          M     if ((PREV_BANK & 2) != 0)
                          M         bcf     STATUS, RP1
                          M     endif
  00000000                M PREV_BANK = 0
                          M 
                          M     ifdef USE_LINKER
                          M       if (CODE_SIZE > 2)
                          M         pagesel PAUSEL
                          M       endif
                          M     else
                          M       if ((PAUSEL) < 1)
                          M         if (CODE_SIZE > 2)
MPASM  5.44                      LCDAND~1.ASM   4-16-2020  23:11:52         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M           if (((PAUSEL) & 800h) == 0)
                          M         bcf     PCLATH, 3
                          M         else
                          M         bsf     PCLATH, 3
                          M         endif
                          M         endif
                          M         if (CODE_SIZE > 4)
                          M           if (((PAUSEL) & 1000h) == 0)
                          M         bcf     PCLATH, 4
                          M           else
                          M         bsf     PCLATH, 4
                          M           endif
                          M         endif
                          M       else
                          M         if ((PAUSEL) > $)
                          M           if (CODE_SIZE > 2)
                          M             if (((PAUSEL) & 800h) == 0)
                          M         bcf     PCLATH, 3
                          M             else
                          M         bsf     PCLATH, 3
                          M             endif
                          M           endif
                          M           if (CODE_SIZE > 4)
                          M             if (((PAUSEL) & 1000h) == 0)
                          M         bcf     PCLATH, 4
                          M             else
                          M         bsf     PCLATH, 4
                          M             endif
                          M           endif
                          M         else
                          M           if (CODE_SIZE > 2)
                          M             if (((PAUSEL) & 1800h) == 0)
00A1   018A               M         clrf    PCLATH
                          M             else
                          M               if (((PAUSEL) & 800h) == 0)
                          M         bcf     PCLATH, 3
                          M               else
                          M         bsf     PCLATH, 3
                          M               endif
                          M               if (CODE_SIZE > 4)
                          M                 if (((PAUSEL) & 1000h) == 0)
                          M         bcf     PCLATH, 4
                          M                 else
                          M         bsf     PCLATH, 4
                          M                 endif   
                          M               endif
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M 
00A2   2056               M         call    PAUSEL
MPASM  5.44                      LCDAND~1.ASM   4-16-2020  23:11:52         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                      00145 
                      00146 ; C:\PBP\LCDAND~1.PBP           00026   goto label
                      00147         GOTO?L  _label
                          M         L?GOTO  _label
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (_label))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M         RST?RP
                          M     if ((PREV_BANK & 1) != 0)
                          M         bcf     STATUS, RP0
                          M     endif
                          M     if ((PREV_BANK & 2) != 0)
                          M         bcf     STATUS, RP1
                          M     endif
  00000000                M PREV_BANK = 0
                          M 
                          M     ifdef USE_LINKER
                          M       if (CODE_SIZE > 2)
                          M         pagesel _label
                          M       endif
                          M     else
                          M       if ((_label) < 1)
                          M         if (CODE_SIZE > 2)
                          M           if (((_label) & 800h) == 0)
                          M         bcf     PCLATH, 3
                          M           else
                          M         bsf     PCLATH, 3
                          M           endif
                          M         endif
                          M         if (CODE_SIZE > 4)
                          M           if (((_label) & 1000h) == 0)
                          M         bcf     PCLATH, 4
                          M           else
                          M         bsf     PCLATH, 4
                          M           endif
                          M         endif
                          M       else
                          M         if ((_label) > $)
                          M           if (CODE_SIZE > 2)
                          M             if (((_label) & 800h) == 0)
                          M         bcf     PCLATH, 3
                          M             else
                          M         bsf     PCLATH, 3
                          M             endif
                          M           endif
                          M           if (CODE_SIZE > 4)
                          M             if (((_label) & 1000h) == 0)
MPASM  5.44                      LCDAND~1.ASM   4-16-2020  23:11:52         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         bcf     PCLATH, 4
                          M             else
                          M         bsf     PCLATH, 4
                          M             endif
                          M           endif
                          M         else
                          M           if (CODE_SIZE > 2)
                          M             if (((_label) & 1800h) == 0)
00A3   018A               M         clrf    PCLATH
                          M             else
                          M               if (((_label) & 800h) == 0)
                          M         bcf     PCLATH, 3
                          M               else
                          M         bsf     PCLATH, 3
                          M               endif
                          M               if (CODE_SIZE > 4)
                          M                 if (((_label) & 1000h) == 0)
                          M         bcf     PCLATH, 4
                          M                 else
                          M         bsf     PCLATH, 4
                          M                 endif
                          M               endif
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M 
00A4   288F               M         goto    _label
                      00148 
                      00149         END
MPASM  5.44                      LCDAND~1.ASM   4-16-2020  23:11:52         PAGE 34


SYMBOL TABLE
  LABEL                             VALUE 

ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ADCON0                            0000001F
ADCON1                            0000009F
ADCS0                             00000006
ADCS1                             00000007
ADC_BITS                          00000008
ADC_CLOCK                         00000003
ADC_SAMPLEUS                      00000032
ADDEN                             00000003
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADRESH                            0000001E
ADRESL                            0000009E
BANK0_END                         0000007F
BANK0_START                       00000020
BANK1_END                         000000EF
BANK1_START                       000000A0
BANK2_END                         0000016F
BANK2_START                       00000110
BANK3_END                         000001EF
BANK3_START                       00000190
BCLIE                             00000003
BCLIF                             00000003
BF                                00000000
BIT?FLIP                          
BIT?FW                            
BIT?GOTO                          
BIT?R1                            
BIT?R2                            
BIT?W                             
BRGH                              00000002
BUTTON_PAUSE                      0000000A
C                                 00000000
CCP1CON                           00000017
CCP1IE                            00000002
CCP1IF                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP1_BIT                          00000002
CCP1_REG                          00000007
CCP2CON                           0000001D
CCP2IE                            00000000
CCP2IF                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
MPASM  5.44                      LCDAND~1.ASM   4-16-2020  23:11:52         PAGE 35


SYMBOL TABLE
  LABEL                             VALUE 

CCP2M2                            00000002
CCP2M3                            00000003
CCP2X                             00000005
CCP2Y                             00000004
CCP2_BIT                          00000001
CCP2_REG                          00000007
CCPR1                             00000015
CCPR1H                            00000016
CCPR1L                            00000015
CCPR2                             0000001B
CCPR2H                            0000001C
CCPR2L                            0000001B
CHK?RP                            
CHS0                              00000003
CHS1                              00000004
CHS2                              00000005
CKE                               00000006
CKP                               00000004
CLRWDT?                           
CLRWDT?NOP                        
CODE_SIZE                         8
CREN                              00000004
CSRC                              00000007
D                                 00000005
DATA_ADDRESS                      00000005
DC                                00000001
DEBUGIN_BIT                       00000000
DEBUGIN_MODE                      00000001
DEBUGIN_REG                       00000006
DEBUG_BAUD                        00000960
DEBUG_BIT                         00000000
DEBUG_DELAY                       00000193
DEBUG_MODE                        00000001
DEBUG_REG                         00000006
DONE                              00000077
DONERET                           0000007B
DONE_USED                         00000001
D_A                               00000005
D_NOT_A                           00000005
EEADR                             0000010D
EEADRH                            0000010F
EECON1                            0000018C
EECON2                            0000018D
EEDATA                            0000010C
EEDATH                            0000010E
EEIE                              00000004
EEIF                              00000004
EEPGD                             00000007
EEPROM_END                        000021FF
EEPROM_START                      00002100
F                                 00000001
FERR                              00000002
FLAGS                             00000032
MPASM  5.44                      LCDAND~1.ASM   4-16-2020  23:11:52         PAGE 36


SYMBOL TABLE
  LABEL                             VALUE 

FLAGS_USED                        00000001
FSR                               00000004
GCEN                              00000007
GIE                               00000007
GO                                00000002
GOP                               00000033
GOTO?L                            
GO_DONE                           00000002
GO_NOT_DONE                       00000002
HSERIN                            00000002
HSERIN?B                          
HSERINIT_USED                     00000001
HSERINX                           00000008
HSERINX_USED                      00000001
HSERIN_USED                       00000001
HSEROUT                           0000000B
HSEROUT?B                         
HSEROUT_USED                      00000001
HSER_BAUD                         9600
HSER_BITS                         00000008
HSER_CLROERR                      1
HSER_RCSTA                        90h
HSER_SPBRG                        00000019
HSER_TXSTA                        24h
I2CFIRSTFLAG                      FLAGS, 2
I2CREADFLAG                       FLAGS, 3
I2CSTOPFLAG                       FLAGS, 5
I2CSTOPSTRFLAG                    FLAGS, 6
I2CWRITEFLAG                      FLAGS, 4
I2C_DATA                          00000005
I2C_READ                          00000002
I2C_START                         00000003
I2C_STOP                          00000004
IBF                               00000007
IBOV                              00000005
INDF                              00000000
INIT                              0000007C
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IRP                               00000007
L?CALL                            
L?GOTO                            
LABEL?L                           
LCDCDFLAG                         FLAGS, 0
LCDINITFLAG                       FLAGS, 1
LCDOUT                            00000011
LCDOUT?B                          
LCDOUT?C                          
LCDOUT_USED                       00000001
LCD_BITS                          8
LCD_COMMANDUS                     000007D0
MPASM  5.44                      LCDAND~1.ASM   4-16-2020  23:11:52         PAGE 37


SYMBOL TABLE
  LABEL                             VALUE 

LCD_DATAUS                        00000032
LCD_DBIT                          0
LCD_DREG                          PORTD
LCD_EBIT                          2
LCD_EREG                          PORTE
LCD_LINES                         00000002
LCD_RSBIT                         0
LCD_RSREG                         PORTE
LCD_RWBIT                         00000000
LCD_RWREG                         00000009
MOVE?AB                           
MOVE?AT                           
MOVE?AW                           
MOVE?AWW                          
MOVE?BA                           
MOVE?BB                           
MOVE?BT                           
MOVE?BW                           
MOVE?CA                           
MOVE?CB                           
MOVE?CT                           
MOVE?CW                           
MOVE?TA                           
MOVE?TB                           
MOVE?TT                           
MOVE?TW                           
MOVE?WA                           
MOVE?WB                           
MOVE?WT                           
MOVE?WW                           
MOVE?WWA                          
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BO                            00000000
NOT_BOR                           00000000
NOT_DONE                          00000002
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RC8                           00000006
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_TX8                           00000006
NOT_W                             00000002
NOT_WRITE                         00000002
OBF                               00000006
OERR                              00000001
OPTION_REG                        00000081
OSC                               00000004
OSC_VALID                         00000001
P                                 00000004
PAUSE                             00000055
PAUSE?C                           
MPASM  5.44                      LCDAND~1.ASM   4-16-2020  23:11:52         PAGE 38


SYMBOL TABLE
  LABEL                             VALUE 

PAUSEL                            00000056
PAUSEUS                           00000062
PAUSEUSL                          00000063
PAUSEUS_USED                      00000001
PAUSE_DELAY                       000003DF
PAUSE_USED                        00000001
PCFG0                             00000000
PCFG1                             00000001
PCFG2                             00000002
PCFG3                             00000003
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PEIE                              00000006
PEN                               00000002
PIE1                              0000008C
PIE2                              0000008D
PIR1                              0000000C
PIR2                              0000000D
PORTA                             00000005
PORTB                             00000006
PORTC                             00000007
PORTD                             00000008
PORTE                             00000009
PR2                               00000092
PREV_BANK                         00000000
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
PSPIE                             00000007
PSPIF                             00000007
PSPMODE                           00000004
R                                 00000002
R0                                00000020
R1                                00000022
R2                                00000024
R3                                00000026
R4                                00000028
R5                                0000002A
R6                                0000002C
R7                                0000002E
R8                                00000030
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RAM_BANKS                         00000004
RAM_END                           000001EF
RAM_START                         00000020
RB0                               00000000
MPASM  5.44                      LCDAND~1.ASM   4-16-2020  23:11:52         PAGE 39


SYMBOL TABLE
  LABEL                             VALUE 

RB1                               00000001
RB2                               00000002
RB3                               00000003
RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RC0                               00000000
RC1                               00000001
RC2                               00000002
RC3                               00000003
RC4                               00000004
RC5                               00000005
RC6                               00000006
RC7                               00000007
RC8_9                             00000006
RC9                               00000006
RCD8                              00000000
RCEN                              00000003
RCIE                              00000005
RCIF                              00000005
RCREG                             0000001A
RCSTA                             00000018
RD                                00000000
RD0                               00000000
RD1                               00000001
RD2                               00000002
RD3                               00000003
RD4                               00000004
RD5                               00000005
RD6                               00000006
RD7                               00000007
RE0                               00000000
RE1                               00000001
RE2                               00000002
READ_WRITE                        00000002
RESET_ORG                         00000000
RM1                               00000034
RM2                               00000035
RP0                               00000005
RP1                               00000006
RR1                               00000036
RR2                               00000037
RSEN                              00000001
RST?RP                            
RX9                               00000006
RX9D                              00000000
R_NOT_W                           00000002
R_W                               00000002
S                                 00000003
SEN                               00000000
MPASM  5.44                      LCDAND~1.ASM   4-16-2020  23:11:52         PAGE 40


SYMBOL TABLE
  LABEL                             VALUE 

SMP                               00000007
SPBRG                             00000099
SPEN                              00000007
SREN                              00000005
SSPADD                            00000093
SSPBUF                            00000013
SSPCON                            00000014
SSPCON2                           00000091
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPOV                             00000006
SSPSTAT                           00000094
STATUS                            00000003
SYNC                              00000004
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
T1INSYNC                          00000002
T1OSCEN                           00000003
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000012
TMR0                              00000001
TMR0IE                            00000005
TMR0IF                            00000002
TMR1                              0000000E
TMR1CS                            00000001
TMR1H                             0000000F
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             0000000E
TMR1ON                            00000000
TMR2                              00000011
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000085
TRISA0                            00000000
TRISA1                            00000001
MPASM  5.44                      LCDAND~1.ASM   4-16-2020  23:11:52         PAGE 41


SYMBOL TABLE
  LABEL                             VALUE 

TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISB                             00000086
TRISB0                            00000000
TRISB1                            00000001
TRISB2                            00000002
TRISB3                            00000003
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000087
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRISD                             00000088
TRISD0                            00000000
TRISD1                            00000001
TRISD2                            00000002
TRISD3                            00000003
TRISD4                            00000004
TRISD5                            00000005
TRISD6                            00000006
TRISD7                            00000007
TRISE                             00000089
TRISE0                            00000000
TRISE1                            00000001
TRISE2                            00000002
TRMT                              00000001
TX8_9                             00000006
TX9                               00000006
TX9D                              00000000
TXD8                              00000000
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             00000019
TXSTA                             00000098
UA                                00000001
W                                 00000000
WCOL                              00000007
WR                                00000001
WREN                              00000002
WRERR                             00000003
Z                                 00000002
_BODEN_OFF                        00003FBF
MPASM  5.44                      LCDAND~1.ASM   4-16-2020  23:11:52         PAGE 42


SYMBOL TABLE
  LABEL                             VALUE 

_BODEN_ON                         00003FFF
_BOREN_OFF                        00003FBF
_BOREN_ON                         00003FFF
_CONFIG                           00002007
_CPD_OFF                          00003FFF
_CPD_ON                           00003EFF
_CP_ALL                           00000FCF
_CP_HALF                          00001FDF
_CP_OFF                           00003FFF
_CP_UPPER_256                     00002FEF
_DEBUG_OFF                        00003FFF
_DEBUG_ON                         000037FF
_DEVID1                           00002006
_FOSC_EXTRC                       00003FFF
_FOSC_HS                          00003FFE
_FOSC_LP                          00003FFC
_FOSC_XT                          00003FFD
_HS_OSC                           00003FFE
_IDLOC0                           00002000
_IDLOC1                           00002001
_IDLOC2                           00002002
_IDLOC3                           00002003
_LP_OSC                           00003FFC
_LVP_OFF                          00003F7F
_LVP_ON                           00003FFF
_PORTE??1                         PORTE, 001h
_PORTH                            00000007
_PORTL                            00000006
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FF7
_RC_OSC                           00003FFF
_TRISH                            00000087
_TRISL                            00000086
_USED                             00000001
_WDTE_OFF                         00003FFB
_WDTE_ON                          00003FFF
_WDT_OFF                          00003FFB
_WDT_ON                           00003FFF
_WRT_ENABLE_OFF                   00003DFF
_WRT_ENABLE_ON                    00003FFF
_WRT_OFF                          00003DFF
_WRT_ON                           00003FFF
_XT_OSC                           00003FFD
__16F877                          00000001
_label                            0000008F
_x                                00000038
hserinloop                        00000005
lcdchkcd                          00000047
lcdloop                           0000004C
lcdout1                           00000039
lcdoutcom                         00000038
lcdsend                           0000004C
main                              00000084
MPASM  5.44                      LCDAND~1.ASM   4-16-2020  23:11:52         PAGE 43


SYMBOL TABLE
  LABEL                             VALUE 

pauseloop                         00000057
pauseusdone                       00000076
pauseush                          0000006C
pauseusloop                       00000069


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)

0000 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0040 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0080 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXX----------- ----------------
2000 : -------X-------- ---------------- ---------------- ----------------

All other memory blocks unused.

Program Memory Words Used:   165
Program Memory Words Free:  8027


Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,     4 suppressed

