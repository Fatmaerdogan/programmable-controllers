
	NOLIST
; PICBASIC PRO(TM) Compiler 2.60, (c) 1998, 2009 microEngineering Labs, Inc. All Rights Reserved. 

LABEL?L macro Label
        RST?RP
    ifdef PM_USED
        LALL
Label
        XALL
    else
Label
    endif
    endm

MUL?WCB macro Win, Cin, Bout
        MOVE?WW Win, R3
        MOVE?CW Cin, R1
        L?CALL  MUL
        MOVE?AB Bout
    endm
MUL_USED = 1

CMPGT?WCL macro Win, Cin, Label
    if ((Cin) < 0)
        L?GOTO  Label
    else
      if ((Cin) < 0ffffh)
        MOVE?WW Win, R0
        MOVE?CB (Cin) >> 8, R1 + 1
        MOVE?CA low (Cin)
        L?CALL  CMPGT
        BIT?GOTO 0, STATUS, Z, Label
      endif
    endif
    endm
CMPGT_USED = 1

END? macro
    local loop
loop    sleep
        L?GOTO  loop
    endm

HSEROUT?C macro Cin
        movlw   Cin
        L?CALL  HSEROUT
    endm
HSEROUT_USED = 1

HSEROUTCOUNT?C macro Cin
        MOVE?CB Cin, R4 + 1
    endm

HSEROUTNUM?B macro Bin
        MOVE?BW Bin, R2
    endm

HSEROUTNUM?W macro Win
        MOVE?WW Win, R2
    endm

HSEROUTDEC? macro
        MOVE?CW HSEROUTJ, R8
        L?CALL  SEROUT2DEC
    endm
HSEROUTJ_USED = 1
SEROUT2DEC_USED = 1

I2CCLOCK?T macro Regin, Bitin
        BIT?R2  Regin, Bitin
    endm

I2CDATA?T macro Regin, Bitin
        BIT?R1  Regin, Bitin
    endm

I2CREADS?B macro Bout
        L?CALL  I2CREADS
        MOVE?AB Bout
    endm
I2CREAD_USED = 1

I2CWRITE?C macro Cin
    if ((high (Cin)) != 0)
        movlw   (Cin) >> 8
        L?CALL  I2CWRITE
    endif
        MOVE?CA low (Cin)
        L?CALL  I2CWRITE
    endm
I2CWRITE_USED = 1

I2CWRITE?W macro Win
        MOVE?WA Win + 1
        L?CALL  I2CWRITE
        MOVE?WA Win
        L?CALL  I2CWRITE
    endm
I2CWRITE_USED = 1

I2CWRITES?B macro Bin
        MOVE?BA Bin
        L?CALL  I2CWRITES
    endm
I2CWRITE_USED = 1

NEXT?WCL macro Win, Cin, Label
    local endlabel
    if ((Cin) == 1)
        CHK?RP  Win
        incf    Win, F
        btfsc   STATUS, Z
      if ((PREV_BANK == 0) & (CODE_SIZE <= 2))
        incfsz  Win + 1, F
        goto    Label
      else
        incf    Win + 1, F
        BIT?GOTO 0, STATUS, Z, Label
      endif
    else
      if ((Cin) <= 255)
        MOVE?CA Cin
        CHK?RP  Win
        addwf   Win, F
        BIT?GOTO 0, STATUS, C, Label
        CHK?RP  Win
        if ((PREV_BANK == 0) & (CODE_SIZE <= 2))
        incfsz  Win + 1, F
        goto    Label
        else
        incf    Win + 1, F
        BIT?GOTO 0, STATUS, Z, Label
        endif
      else
        movlw   low (Cin)
        CHK?RP  Win
        addwf   Win, F
        movlw   (Cin) >> 8
        btfsc   STATUS, C
        addlw   1
        BIT?GOTO 1, STATUS, C, endlabel
        addwf   Win + 1, F
          if ((Cin) <= 65535)
        BIT?GOTO 0, STATUS, C, Label
          endif
      endif
    endif
endlabel
    endm

PAUSE?C macro Cin
    if (((Cin) >> 8) == 0)
        MOVE?CA Cin
        L?CALL  PAUSE
    else
        MOVE?CB (Cin) >> 8, R1 + 1
        MOVE?CA low (Cin)
        L?CALL  PAUSEL
    endif
    endm
PAUSE_USED = 1


	LIST
