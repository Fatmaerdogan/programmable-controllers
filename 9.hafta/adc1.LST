MPASM  5.44                          ADC1.ASM   5-3-2020  15:47:42         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 
                      00002 ; PICBASIC PRO(TM) Compiler 2.60, (c) 1998, 2009 microEngineering Labs, Inc. All Rights Reserved. 
  00000001            00003 _USED                   EQU     1
                      00004 
                      00005         INCLUDE "C:\PBP\16F877.INC"
                      00001 ;****************************************************************
                      00002 ;*  16F877.INC                                                  *
                      00003 ;*                                                              *
                      00004 ;*  By        : Leonard Zerman, Jeff Schmoyer                   *
                      00005 ;*  Notice    : Copyright (c) 2003 microEngineering Labs, Inc.  *
                      00006 ;*              All Rights Reserved                             *
                      00007 ;*  Date      : 11/07/03                                        *
                      00008 ;*  Version   : 2.45                                            *
                      00009 ;*  Notes     :                                                 *
                      00010 ;****************************************************************
                      00019         LIST
                      00020         LIST p = 16F877, r = dec, w = -302
                      00021         INCLUDE "P16F877.INC"   ; MPASM  Header
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ;  MPASM PIC16F877 processor include
                      00005 ; 
                      00006 ;  (c) Copyright 1999-2012 Microchip Technology, All rights reserved
                      00007 ;==========================================================================
                      00008 
                      00540         LIST
2007   3F75           00022         __config _XT_OSC & _WDT_ON & _PWRTE_ON & _LVP_OFF & _CP_OFF
                      00025         LIST
                      00006 
                      00007 
                      00008 ; Define statements.
                      00009 ; C:\PBP\16F877.BAS             00018   DEFINE  CODE_SIZE 8
                      00010 #define         CODE_SIZE                8
                      00011 ; C:\PBP\ADC1.PBP               00002   DEFINE LCD_DREG PORTD           'LCD data portunun baglandigi pi
                            c portu 
                      00012 #define         LCD_DREG                 PORTD           
                      00013 ; C:\PBP\ADC1.PBP               00003   DEFINE LCD_DBIT 0                        '4-bit bus için data bi
                            t(0yada4) baslangiç
                      00014 #define         LCD_DBIT                 0                        
                      00015 ; C:\PBP\ADC1.PBP               00004   DEFINE LCD_RSREG PORTB          'LCD RS in baglandigi pic portu 
                      00016 #define         LCD_RSREG                PORTB          
                      00017 ; C:\PBP\ADC1.PBP               00005   DEFINE LCD_RSBIT 0                      'RS in baglandigi pic po
                            rtE nin bit numarasi
                      00018 #define         LCD_RSBIT                0                      
                      00019 ; C:\PBP\ADC1.PBP               00006   DEFINE LCD_EREG PORTB            'LCD E nin baglandigi pic portu
                             
                      00020 #define         LCD_EREG                 PORTB            
                      00021 ; C:\PBP\ADC1.PBP               00007   DEFINE LCD_EBIT 1                        'LCD E nin baglandigi p
                            ic portE nin bit numarasi
                      00022 #define         LCD_EBIT                 1                        
                      00023 ; C:\PBP\ADC1.PBP               00008   DEFINE LCD_BITS 8                             'PortD nin 8 biti 
                            veri transferi için kullanildi
MPASM  5.44                          ADC1.ASM   5-3-2020  15:47:42         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00024 #define         LCD_BITS                 8                             
                      00025 ; C:\PBP\ADC1.PBP               00011   define ADC_BITS 8
                      00026 #define         ADC_BITS                 8
                      00027 ; C:\PBP\ADC1.PBP               00012   define ADC_CLOCK 1
                      00028 #define         ADC_CLOCK                1
                      00029 ; C:\PBP\ADC1.PBP               00013   define ADC_SAPMLEUS 50
                      00030 #define         ADC_SAPMLEUS             50
                      00031 
  00000020            00032 RAM_START                       EQU     00020h
  000001EF            00033 RAM_END                         EQU     001EFh
  00000004            00034 RAM_BANKS                       EQU     00004h
  00000020            00035 BANK0_START                     EQU     00020h
  0000007F            00036 BANK0_END                       EQU     0007Fh
  000000A0            00037 BANK1_START                     EQU     000A0h
  000000EF            00038 BANK1_END                       EQU     000EFh
  00000110            00039 BANK2_START                     EQU     00110h
  0000016F            00040 BANK2_END                       EQU     0016Fh
  00000190            00041 BANK3_START                     EQU     00190h
  000001EF            00042 BANK3_END                       EQU     001EFh
  00002100            00043 EEPROM_START                    EQU     02100h
  000021FF            00044 EEPROM_END                      EQU     021FFh
                      00045 
                      00046 ; C:\PBP\PBPPIC14.RAM           00012   A00020  R0      VAR     WORD BANK0 SYSTEM       ' System Registe
                            r
  00000020            00047 R0                              EQU     RAM_START + 000h
                      00048 ; C:\PBP\PBPPIC14.RAM           00013   A00022  R1      VAR     WORD BANK0 SYSTEM       ' System Registe
                            r
  00000022            00049 R1                              EQU     RAM_START + 002h
                      00050 ; C:\PBP\PBPPIC14.RAM           00014   A00024  R2      VAR     WORD BANK0 SYSTEM       ' System Registe
                            r
  00000024            00051 R2                              EQU     RAM_START + 004h
                      00052 ; C:\PBP\PBPPIC14.RAM           00015   A00026  R3      VAR     WORD BANK0 SYSTEM       ' System Registe
                            r
  00000026            00053 R3                              EQU     RAM_START + 006h
                      00054 ; C:\PBP\PBPPIC14.RAM           00016   A00028  R4      VAR     WORD BANK0 SYSTEM       ' System Registe
                            r
  00000028            00055 R4                              EQU     RAM_START + 008h
                      00056 ; C:\PBP\PBPPIC14.RAM           00017   A0002A  R5      VAR     WORD BANK0 SYSTEM       ' System Registe
                            r
  0000002A            00057 R5                              EQU     RAM_START + 00Ah
                      00058 ; C:\PBP\PBPPIC14.RAM           00018   A0002C  R6      VAR     WORD BANK0 SYSTEM       ' System Registe
                            r
  0000002C            00059 R6                              EQU     RAM_START + 00Ch
                      00060 ; C:\PBP\PBPPIC14.RAM           00019   A0002E  R7      VAR     WORD BANK0 SYSTEM       ' System Registe
                            r
  0000002E            00061 R7                              EQU     RAM_START + 00Eh
                      00062 ; C:\PBP\PBPPIC14.RAM           00020   A00030  R8      VAR     WORD BANK0 SYSTEM       ' System Registe
                            r
  00000030            00063 R8                              EQU     RAM_START + 010h
                      00064 ; C:\PBP\PBPPIC14.RAM           00026   A00032  FLAGS   VAR     BYTE BANK0 SYSTEM       ' Static flags
  00000032            00065 FLAGS                           EQU     RAM_START + 012h
                      00066 ; C:\PBP\PBPPIC14.RAM           00025   A00033  GOP     VAR     BYTE BANK0 SYSTEM       ' Gen Op Paramet
                            er
MPASM  5.44                          ADC1.ASM   5-3-2020  15:47:42         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000033            00067 GOP                             EQU     RAM_START + 013h
                      00068 ; C:\PBP\PBPPIC14.RAM           00022   A00034  RM1     VAR     BYTE BANK0 SYSTEM       ' Pin 1 Mask
  00000034            00069 RM1                             EQU     RAM_START + 014h
                      00070 ; C:\PBP\PBPPIC14.RAM           00024   A00035  RM2     VAR     BYTE BANK0 SYSTEM       ' Pin 2 Mask
  00000035            00071 RM2                             EQU     RAM_START + 015h
                      00072 ; C:\PBP\PBPPIC14.RAM           00021   A00036  RR1     VAR     BYTE BANK0 SYSTEM       ' Pin 1 Register
  00000036            00073 RR1                             EQU     RAM_START + 016h
                      00074 ; C:\PBP\PBPPIC14.RAM           00023   A00037  RR2     VAR     BYTE BANK0 SYSTEM       ' Pin 2 Register
  00000037            00075 RR2                             EQU     RAM_START + 017h
                      00076 ; C:\PBP\ADC1.PBP               00017   A00038  i var byte
  00000038            00077 _i                              EQU     RAM_START + 018h
                      00078 ; C:\PBP\16F877.BAS             00022   PORTL   VAR     PORTB
  00000006            00079 _PORTL                          EQU      PORTB
                      00080 ; C:\PBP\16F877.BAS             00023   PORTH   VAR     PORTC
  00000007            00081 _PORTH                          EQU      PORTC
                      00082 ; C:\PBP\16F877.BAS             00024   TRISL   VAR     TRISB
  00000086            00083 _TRISL                          EQU      TRISB
                      00084 ; C:\PBP\16F877.BAS             00025   TRISH   VAR     TRISC
  00000087            00085 _TRISH                          EQU      TRISC
                      00086         INCLUDE "ADC1.MAC"
                      00001 
                      00052         LIST
                      00087         INCLUDE "C:\PBP\PBPPIC14.LIB"
                      00001 ;******************************************************************
                      00002 ;*  PBPPIC14.LIB                                                  *
                      00003 ;*                                                                *
                      00004 ;*  By        : Leonard Zerman, Jeff Schmoyer                     *
                      00005 ;*  Notice    : Copyright (c) 2009 microEngineering Labs, Inc.    *
                      00006 ;*              All Rights Reserved                               *
                      00007 ;*  Date      : 07/08/09                                          *
                      00008 ;*  Version   : 2.60                                              *
                      00009 ;*  Notes     :                                                   *
                      00010 ;******************************************************************
                      00054   LIST
                      00055 ; Oscillator is 4MHz
                      01133   LIST
0000                  01134     ORG RESET_ORG               ; Reset vector usually at 0
                      01144   LIST
0000   01B2           01145         clrf    FLAGS           ; Clear all flags on reset
                      01149   LIST
0001   28B9           01150         goto    INIT            ; Finish initialization
                      02865   LIST
0002   01A5           02866 LCDOUTDEC clrf  R2 + 1          ; Zero high value
                      02872   LIST
0003   00A4           02873 LCDOUTDECL movwf R2             ; Save low value
0004   17B3           02874         bsf     GOP, 7          ; Set blanking on
0005   3027           02875         movlw   high 10000      ; Find 10,000s
0006   00A3           02876         movwf   R1 + 1
0007   3010           02877         movlw   low 10000
0008   2015           02878         call    lcdoutdig       ; Do the work
0009   3003           02879         movlw   high 1000       ; Find 1,000s
000A   00A3           02880         movwf   R1 + 1
000B   30E8           02881         movlw   low 1000
MPASM  5.44                          ADC1.ASM   5-3-2020  15:47:42         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000C   2015           02882         call    lcdoutdig       ; Do the work
000D   01A3           02883         clrf    R1 + 1          ; Find 100s
000E   3064           02884         movlw   100
000F   2015           02885         call    lcdoutdig       ; Do the work
0010   01A3           02886         clrf    R1 + 1          ; Find 10s
0011   300A           02887         movlw   10
0012   2015           02888         call    lcdoutdig       ; Do the work
0013   0824           02889         movf    R2, W           ; Get the 1s
0014   2820           02890         goto    lcdouta         ; Send the 1s
                      02891 
0015   00A2           02892 lcdoutdig movwf R1              ; Save last piece
0016   0825           02893         movf    R2 + 1, W       ; Move remainder to dividend
0017   00A1           02894         movwf   R0 + 1
0018   0824           02895         movf    R2, W
0019   00A0           02896         movwf   R0
001A   2098           02897         call    DIV             ; Do the math
001B   0820           02898         movf    R0, W           ; Get the result
001C   1D03           02899         btfss   STATUS, Z       ; If zero, goto blank check
001D   13B3           02900         bcf     GOP, 7          ; Not zero so clear blank
001E   1BB3           02901         btfsc   GOP, 7          ; If blanking on, don't send
001F   0008           02902         return
0020   3E30           02903 lcdouta addlw   '0'             ; Add ASCII offset
                      02931   LIST
0021   00A7           02932 LCDOUT  movwf   R3 + 1          ; Save char
                      02933 
0022   1086           02934         bcf     LCD_EREG, LCD_EBIT      ; Set E low
0023   1006           02935         bcf     LCD_RSREG, LCD_RSBIT    ; Set command register select
0024   1006           02936         bcf     LCD_RWREG, LCD_RWBIT    ; Set RW low (write)
                      02937 
0025   1683           02938         bsf     STATUS, RP0     ; Point to TRISes
0026   1086           02939         bcf     LCD_EREG, LCD_EBIT      ; Set E to output
0027   1006           02940         bcf     LCD_RSREG, LCD_RSBIT    ; Set RS to output
0028   1006           02941         bcf     LCD_RWREG, LCD_RWBIT    ; Set RW to output
                      02942     if ((LCD_BITS) == 8)
0029   0188           02943         clrf    LCD_DREG        ; Set port to all output
                      02944     else
                      02945       if ((LCD_DBIT) == 0)
                      02946         movlw   0f0h
                      02947       else
                      02948         movlw   0fh
                      02949       endif
                      02950         andwf   LCD_DREG, F     ; Set proper half of port to output
                      02951     endif
002A   1283           02952         bcf     STATUS, RP0     ; Point back to ports
                      02953 
002B   0827           02954         movf    R3 + 1, W       ; Get back char
                      02955 
002C   18B2           02956         btfsc   LCDINITFLAG     ; Has lcd been inititalized?
002D   2849           02957         goto    lcdout1         ; Yes
                      02958 
002E   303A           02959         movlw   high 15100      ; Wait at least 15ms
002F   00A1           02960         movwf   R0 + 1
0030   30FC           02961         movlw   low 15100
MPASM  5.44                          ADC1.ASM   5-3-2020  15:47:42         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0031   2084           02962         call    PAUSEUSL
                      02963 
0032   3033           02964         movlw   33h             ; Init lcd
0033   00A6           02965         movwf   R3              ; Save char
0034   205C           02966         call    lcdloop         ; Send init
                      02967 
0035   3010           02968         movlw   high 4200       ; Wait at least 4.1ms
0036   00A1           02969         movwf   R0 + 1
0037   3068           02970         movlw   low 4200
0038   2084           02971         call    PAUSEUSL
                      02972 
0039   205C           02973         call    lcdloop         ; Send init (33) again
                      02974 
003A   3064           02975         movlw   100             ; Wait at least 100us
003B   2083           02976         call    PAUSEUS
                      02977 
                      02978     if ((LCD_BITS) == 8)
003C   205C           02979         call    lcdloop         ; Send init (33) one more time
                      02980       if ((LCD_LINES) == 1)
                      02981         movlw   30h             ; 8-bit mode, 1 line, 5x7 font
                      02982       else
003D   3038           02983         movlw   38h             ; 8-bit mode, 2+ lines, 5x7 font
                      02984       endif
                      02985     else
                      02986         movlw   22h             ; Send init to 4-bit mode
                      02987         movwf   R3              ; Save character
                      02988         call    lcdloop         ; Set interface to 4-bit mode
                      02989       if ((LCD_LINES) == 1)
                      02990         movlw   20h             ; 4-bit mode, 1 line, 5x7 font
                      02991       else
                      02992         movlw   28h             ; 4-bit mode, 2+ lines, 5x7 font
                      02993       endif
                      02994     endif
003E   2048           02995         call    lcdoutcom       ; Send function set
                      02996 
003F   300C           02997         movlw   0ch             ; Display on, no cursor, no blink
0040   2048           02998         call    lcdoutcom
                      02999 
0041   3001           03000         movlw   01h             ; Display clear
0042   2048           03001         call    lcdoutcom
                      03002 
0043   3006           03003         movlw   06h             ; Lcd entry mode set, increment, no shift
0044   2048           03004         call    lcdoutcom
                      03005 
0045   14B2           03006         bsf     LCDINITFLAG     ; Set to initialized
                      03007 
0046   0827           03008         movf    R3 + 1, W       ; Get saved char back (again)
0047   2849           03009         goto    lcdout1
                      03010 
0048   1432           03011 lcdoutcom bsf   LCDCDFLAG       ; Set for command
                      03012 
0049   00A6           03013 lcdout1 movwf   R3              ; Save char
004A   1C32           03014         btfss   LCDCDFLAG       ; Command this time?
MPASM  5.44                          ADC1.ASM   5-3-2020  15:47:42         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

004B   2857           03015         goto    lcdchkcd        ; No
                      03016 
004C   1006           03017         bcf     LCD_RSREG, LCD_RSBIT    ; Set command register select
004D   3C03           03018         sublw   3               ; Is it a slow command (clear screen or home)?
004E   1C03           03019         btfss   STATUS, C       ; Long or short delay?
004F   285C           03020         goto    lcdsend         ; Short delay
                      03021 
0050   205C           03022         call    lcdsend         ; Long delay (includes short delay)
0051   3007           03023         movlw   high LCD_COMMANDUS      ; Wait for command to complete
0052   00A1           03024         movwf   R0 + 1
0053   30D0           03025         movlw   low LCD_COMMANDUS
0054   2084           03026         call    PAUSEUSL
0055   1403           03027         bsf     STATUS, C       ; Set no timeout for Serout2mod
0056   0008           03028         return
                      03029 
0057   1432           03030 lcdchkcd bsf    LCDCDFLAG       ; Indicate first nibble (or command next time)
0058   3CFE           03031         sublw   0feh            ; Command next time? (char still in W)
0059   1903           03032         btfsc   STATUS, Z
005A   28B4           03033         goto    DONE            ; Yes - nothing to do this time (C set for no timeout for Serout2mod)
                      03034 
005B   1406           03035         bsf     LCD_RSREG, LCD_RSBIT    ; Set data register select
                      03036 
005C                  03037 lcdsend
                      03038     if ((LCD_BITS) == 8)
005C   1486           03039 lcdloop bsf     LCD_EREG, LCD_EBIT      ; Enabled
005D   0826           03040         movf    R3, W           ; Get char back
005E   0088           03041         movwf   LCD_DREG        ; Write char to the port
                      03042       if (OSC > 16)
                      03043         nop                     ; Minimum 1us enable time
                      03044       endif
                      03045       if (OSC > 20)
                      03046         nop
                      03047       endif
005F   1032           03048         bcf     LCDCDFLAG       ; Indicate data next time
0060   1086           03049         bcf     LCD_EREG, LCD_EBIT      ; Not enabled
                      03050     else
                      03051 
                      03052       if ((LCD_DBIT) == 0)
                      03053         swapf   R3, F           ; Swap top and bottom nibbles
                      03054       endif
                      03055 
                      03056         btfss   LCDCDFLAG       ; First time through only
                      03057 lcdloop bcf     LCDCDFLAG       ; Indicate second nibble (and data next time)
                      03058 
                      03059         bsf     LCD_EREG, LCD_EBIT      ; Enabled
                      03060 
                      03061       if ((LCD_DBIT) == 0)
                      03062         movlw   0f0h            ; Clear lcd data port
                      03063       else
                      03064         movlw   0fh             ; Clear lcd data port
                      03065       endif
                      03066         andwf   LCD_DREG, F
                      03067 
MPASM  5.44                          ADC1.ASM   5-3-2020  15:47:42         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      03068         movf    R3, W           ; Isolate proper nibble of char
                      03069       if ((LCD_DBIT) == 0)
                      03070         andlw   0fh
                      03071       else
                      03072         andlw   0f0h
                      03073       endif
                      03074         iorwf   LCD_DREG, F     ; Write char to port
                      03075         bcf     LCD_EREG, LCD_EBIT      ; Not enabled - that's four
                      03076         swapf   R3, F           ; Get to other nibble
                      03077 
                      03078         btfsc   LCDCDFLAG       ; Need to send 4 more?
                      03079         goto    lcdloop         ; Send lower 4 to lcd
                      03080     endif
                      03081 
0061   3032           03082         movlw   LCD_DATAUS      ; Wait for data operation to complete
0062   2083           03083         call    PAUSEUS
0063   1403           03084         bsf     STATUS, C       ; Set no timeout for Serout2mod
0064   0008           03085         return
                      05972   LIST
0065                  05973 ADCIN
                      05974       if (GO_DONE == 2)
0065   00A0           05975         movwf   R0              ; Store channel for rotate
0066   0DA0           05976         rlf     R0, F           ; Move channel into proper position
0067   0DA0           05977         rlf     R0, F
0068   0D20           05978         rlf     R0, W
0069   3938           05979         andlw   038h            ; Mask channel
                      05980           ifdef CHS3
                      05981         btfsc   R0, 5           ; Check for channel > 7
                      05982         iorlw   2               ; Set CHS3
                      05983           endif
006A   3841           05984         iorlw   (((ADC_CLOCK) & 3) << 6) | 1    ; Set up clock source and turn on ADC
                      05985       else                      ; (GO_DONE == 1)
                      05986         andlw   0fh             ; Mask channel
                      05987         movwf   R0              ; Store channel for rotate later
                      05988         bcf     STATUS, C       ; Clear carry for rotate
                      05989         rlf     R0, F           ; Move channel into proper position
                      05990         rlf     R0, F
                      05991         movf    ADCON0, W       ; Get current value
                      05992           ifdef CHS3
                      05993         andlw   0c0h            ; Remove channel bits, preserving possible clock select, Vref, formed
                      05994           else
                      05995         andlw   0e0h            ; Remove channel bits, preserving possible clock select, Vref, formed
                      05996           endif
                      05997         iorwf   R0, W           ; Put in channel
                      05998         iorlw   1               ; Turn on ADC
                      05999       endif
006B   009F           06000         movwf   ADCON0          ; Set up to start sampling
                      06001       if ((ADC_SAMPLEUS) != 0)
006C   3000           06002         movlw   (ADC_SAMPLEUS) >> 8     ; Get sample time
006D   00A1           06003         movwf   R0 + 1
006E   3032           06004         movlw   low (ADC_SAMPLEUS)
006F   2084           06005         call    PAUSEUSL        ; Wait sample time
                      06006       endif
MPASM  5.44                          ADC1.ASM   5-3-2020  15:47:42         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0070   151F           06007         bsf     ADCON0, GO_DONE ; Start conversion
0071   191F           06008 adcinloop btfsc ADCON0, GO_DONE ; Wait for conversion to complete
0072   2871           06009         goto    adcinloop
                      06010       if ((ADC_BITS) <= 8)
0073   01A1           06011         clrf    R0 + 1
                      06012           ifdef ADRES
                      06013         movf    ADRES, W        ; Get 8-bit result
                      06014           else
0074   081E           06015         movf    ADRESH, W       ; Get 8-bit result
                      06016           endif
                      06017       else
                      06018         movf    ADRESH, W       ; Get 16-bit result
                      06019         movwf   R0 + 1
                      06020         bsf     STATUS, RP0     ; Point to bank 1 (DONE will reset it)
                      06021         movf    ADRESL, W
                      06022       endif
0075   28B4           06023         goto    DONE
                      06329   LIST
0076   01A3           06330 PAUSE   clrf    R1 + 1
0077   00A2           06331 PAUSEL  movwf   R1
0078   30FF           06332 pauseloop movlw -1              ; 1 (9)
0079   07A2           06333         addwf   R1, F           ; 1
007A   1C03           06334         btfss   STATUS, C       ; 1 / 2
007B   07A3           06335         addwf   R1 + 1, F       ; 1 / 0
007C   1C03           06336         btfss   STATUS, C       ; 2
007D   28B4           06337         goto    DONE
007E   3003           06338         movlw   (PAUSE_DELAY) >> 8      ; 1
007F   00A1           06339         movwf   R0 + 1          ; 1
0080   30DF           06340         movlw   low (PAUSE_DELAY)       ; 1
0081   2084           06341         call    PAUSEUSL        ; -2 (PAUSEUSL gives you 2 less than you ask for)
0082   2878           06342         goto    pauseloop       ; 2
                      06386   LIST
0083   01A1           06387 PAUSEUS clrf    R0 + 1          ; 1
0084   3EE8           06388 PAUSEUSL addlw  -24             ; 1 Subtract overhead
0085   00A0           06389         movwf   R0              ; 1
0086   09A1           06390         comf    R0 + 1, F       ; 1
0087   30FC           06391         movlw   -4              ; 1
0088   1C03           06392         btfss   STATUS, C       ; 1 / 2
0089   288D           06393         goto    pauseush        ; 2 / 0
008A   07A0           06394 pauseusloop addwf R0, F         ; 1
008B   1803           06395         btfsc   STATUS, C       ; 1 / 2
008C   288A           06396         goto    pauseusloop     ; 2 / 0
008D   07A0           06397 pauseush addwf  R0, F           ; 1 Do an extra countdown
                      06398         CLRWDT?NOP              ; 1 Keep Watchdog clear
                          M     ifndef NO_CLRWDT
008E   0064               M         clrwdt
                          M     else
                          M         nop
                          M     endif
008F   0FA1           06399         incfsz  R0 + 1, F       ; 1 / 2
0090   288A           06400         goto    pauseusloop     ; 2 / 0
0091   1820           06401         btfsc   R0, 0           ; 1 / 2
0092   2893           06402         goto    $ + 1           ; 2 / 0 Burn an extra cycle
MPASM  5.44                          ADC1.ASM   5-3-2020  15:47:42         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0093   1CA0           06403         btfss   R0, 1           ; 1 / 2
0094   2897           06404         goto    pauseusdone     ; 2 / 0
0095   0000           06405         nop                     ; 1
0096   2897           06406         goto    $ + 1           ; 2 Burn an extra 2 cycles
0097   0008           06407 pauseusdone return              ; 2 + 3 (call + setup)
                      07621   LIST
0098   01A5           07622 DIV     clrf    R2 + 1
0099   01A4           07623         clrf    R2
                      07624 
009A   3010           07625 DIV32DIV movlw   16
009B   00A6           07626         movwf   R3
                      07627 
009C   0D21           07628 divloop rlf     R0 + 1, W
009D   0DA4           07629         rlf     R2, F
009E   0DA5           07630         rlf     R2 + 1, F
009F   0822           07631         movf    R1, W
00A0   02A4           07632         subwf   R2, F
00A1   0823           07633         movf    R1 + 1, W
00A2   1C03           07634         btfss   STATUS, C
00A3   0F23           07635         incfsz  R1 + 1, W
00A4   02A5           07636         subwf   R2 + 1, F
                      07637 
00A5   1803           07638         btfsc   STATUS, C
00A6   28AE           07639         goto    divok
00A7   0822           07640         movf    R1, W
00A8   07A4           07641         addwf   R2, F
00A9   0823           07642         movf    R1 + 1, W
00AA   1803           07643         btfsc   STATUS, C
00AB   0F23           07644         incfsz  R1 + 1, W
00AC   07A5           07645         addwf   R2 + 1, F
                      07646 
00AD   1003           07647         bcf     STATUS, C
                      07648 
00AE   0DA0           07649 divok   rlf     R0, F
00AF   0DA1           07650         rlf     R0 + 1, F
                      07651 
00B0   0BA6           07652         decfsz  R3, F
00B1   289C           07653         goto    divloop
00B2   0820           07654         movf    R0, W           ; Get low byte to W
00B3   28B4           07655         goto    DONE
                      07766   LIST
00B4   1383           07767 DONE    bcf     STATUS, IRP     ; 1 Set FSR to bank 0/1
00B5   1303           07768         bcf     STATUS, RP1     ; 1 Show direct bank 0
00B6   1283           07769         bcf     STATUS, RP0     ; 1
                      07770         CLRWDT?NOP              ; 1 Hit Watchdog timer
                          M     ifndef NO_CLRWDT
00B7   0064               M         clrwdt
                          M     else
                          M         nop
                          M     endif
00B8   0008           07771 DONERET return                  ; 2 Done
                      07797   LIST
00B9                  07798 INIT
MPASM  5.44                          ADC1.ASM   5-3-2020  15:47:42         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      07836   LIST
00B9                  07837 main
                      00088 
                      00089 
                      00090 ; C:\PBP\16F877.BAS             00012   BANK0   $0020, $007F
                      00091 ; C:\PBP\16F877.BAS             00013   BANK1   $00A0, $00EF
                      00092 ; C:\PBP\16F877.BAS             00014   BANK2   $0110, $016F
                      00093 ; C:\PBP\16F877.BAS             00015   BANK3   $0190, $01EF
                      00094 ; C:\PBP\16F877.BAS             00016   EEPROM  $2100, $21FF
                      00095 ; C:\PBP\16F877.BAS             00017   LIBRARY "PBPPIC14"
                      00096 ; C:\PBP\16F877.BAS             00018   DEFINE  CODE_SIZE 8
                      00097 
                      00098 ; C:\PBP\16F877.BAS             00020           include "PIC14EXT.BAS"
                      00099 
                      00100 ; C:\PBP\16F877.BAS             00027           include "PBPPIC14.RAM"
                      00101 ; C:\PBP\ADC1.PBP               00002   DEFINE LCD_DREG PORTD           'LCD data portunun baglandigi pi
                            c portu 
                      00102 ; C:\PBP\ADC1.PBP               00003   DEFINE LCD_DBIT 0                        '4-bit bus için data bi
                            t(0yada4) baslangiç
                      00103 ; C:\PBP\ADC1.PBP               00004   DEFINE LCD_RSREG PORTB          'LCD RS in baglandigi pic portu 
                      00104 ; C:\PBP\ADC1.PBP               00005   DEFINE LCD_RSBIT 0                      'RS in baglandigi pic po
                            rtE nin bit numarasi
                      00105 ; C:\PBP\ADC1.PBP               00006   DEFINE LCD_EREG PORTB            'LCD E nin baglandigi pic portu
                             
                      00106 ; C:\PBP\ADC1.PBP               00007   DEFINE LCD_EBIT 1                        'LCD E nin baglandigi p
                            ic portE nin bit numarasi
                      00107 ; C:\PBP\ADC1.PBP               00008   DEFINE LCD_BITS 8                             'PortD nin 8 biti 
                            veri transferi için kullanildi
                      00108 ; C:\PBP\ADC1.PBP               00011   define ADC_BITS 8
                      00109 ; C:\PBP\ADC1.PBP               00012   define ADC_CLOCK 1
                      00110 ; C:\PBP\ADC1.PBP               00013   define ADC_SAPMLEUS 50
                      00111 
                      00112 ; C:\PBP\ADC1.PBP               00014   TRISA=%000001
                      00113         MOVE?CB 001h, TRISA
                          M         CHK?RP  TRISA
                          M     if (((TRISA) & 180h) == 0)
                          M       if (PREV_BANK == 1)
                          M         bcf     STATUS, RP0
                          M       endif
                          M       if (PREV_BANK == 2)
                          M         bcf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 3)
                          M         bcf     STATUS, RP0
                          M         bcf     STATUS, RP1
                          M       endif
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     if (((TRISA) & 180h) == 80h)
                          M       if (PREV_BANK == 0)
00B9   1683               M         bsf     STATUS, RP0
                          M       endif
MPASM  5.44                          ADC1.ASM   5-3-2020  15:47:42         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       if (PREV_BANK == 2)
                          M         bsf     STATUS, RP0
                          M         bcf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 3)
                          M         bcf     STATUS, RP1
                          M       endif
  00000001                M PREV_BANK = 1
                          M     endif
                          M 
                          M     if (((TRISA) & 180h) == 100h)
                          M       if (PREV_BANK == 0)
                          M         bsf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 1)
                          M         bcf     STATUS, RP0
                          M         bsf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 3)
                          M         bcf     STATUS, RP0
                          M       endif
                          M PREV_BANK = 2
                          M     endif
                          M 
                          M     if (((TRISA) & 180h) == 180h)
                          M       if (PREV_BANK == 0)
                          M         bsf     STATUS, RP0
                          M         bsf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 1)
                          M         bsf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 2)
                          M         bsf     STATUS, RP0
                          M       endif
                          M PREV_BANK = 3
                          M     endif
                          M     if (low (001h) == 0)
                          M         clrf    TRISA
                          M     else
00BA   3001               M         movlw   low (001h)
00BB   0085               M         movwf   TRISA
                          M     endif
                      00114 
                      00115 ; C:\PBP\ADC1.PBP               00016   ADCON1=0
                      00116         MOVE?CB 000h, ADCON1
                          M         CHK?RP  ADCON1
                          M     if (((ADCON1) & 180h) == 0)
                          M       if (PREV_BANK == 1)
                          M         bcf     STATUS, RP0
                          M       endif
                          M       if (PREV_BANK == 2)
                          M         bcf     STATUS, RP1
MPASM  5.44                          ADC1.ASM   5-3-2020  15:47:42         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       endif
                          M       if (PREV_BANK == 3)
                          M         bcf     STATUS, RP0
                          M         bcf     STATUS, RP1
                          M       endif
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     if (((ADCON1) & 180h) == 80h)
                          M       if (PREV_BANK == 0)
                          M         bsf     STATUS, RP0
                          M       endif
                          M       if (PREV_BANK == 2)
                          M         bsf     STATUS, RP0
                          M         bcf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 3)
                          M         bcf     STATUS, RP1
                          M       endif
  00000001                M PREV_BANK = 1
                          M     endif
                          M 
                          M     if (((ADCON1) & 180h) == 100h)
                          M       if (PREV_BANK == 0)
                          M         bsf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 1)
                          M         bcf     STATUS, RP0
                          M         bsf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 3)
                          M         bcf     STATUS, RP0
                          M       endif
                          M PREV_BANK = 2
                          M     endif
                          M 
                          M     if (((ADCON1) & 180h) == 180h)
                          M       if (PREV_BANK == 0)
                          M         bsf     STATUS, RP0
                          M         bsf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 1)
                          M         bsf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 2)
                          M         bsf     STATUS, RP0
                          M       endif
                          M PREV_BANK = 3
                          M     endif
                          M     if (low (000h) == 0)
00BC   019F               M         clrf    ADCON1
                          M     else
                          M         movlw   low (000h)
MPASM  5.44                          ADC1.ASM   5-3-2020  15:47:42         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         movwf   ADCON1
                          M     endif
                      00117 
                      00118 ; C:\PBP\ADC1.PBP               00018   label:
                      00119 
                      00120         LABEL?L _label  
                          M         RST?RP
                          M     if ((PREV_BANK & 1) != 0)
00BD   1283               M         bcf     STATUS, RP0
                          M     endif
                          M     if ((PREV_BANK & 2) != 0)
                          M         bcf     STATUS, RP1
                          M     endif
  00000000                M PREV_BANK = 0
                          M     ifdef PM_USED
                          M         LALL
                          M _label
                          M         XALL
                          M     else
00BE                      M _label
                          M     endif
                      00121 
                      00122 ; C:\PBP\ADC1.PBP               00019   ADCIN 0,i
                      00123         ADCIN?CB        000h, _i
00BE   3000               M         movlw   000h
                          M         L?CALL  ADCIN
                          M         RST?RP
                          M     if ((PREV_BANK & 1) != 0)
                          M         bcf     STATUS, RP0
                          M     endif
                          M     if ((PREV_BANK & 2) != 0)
                          M         bcf     STATUS, RP1
                          M     endif
  00000000                M PREV_BANK = 0
                          M 
                          M     ifdef USE_LINKER
                          M       if (CODE_SIZE > 2)
                          M         pagesel ADCIN
                          M       endif
                          M     else
                          M       if ((ADCIN) < 1)
                          M         if (CODE_SIZE > 2)
                          M           if (((ADCIN) & 800h) == 0)
                          M         bcf     PCLATH, 3
                          M         else
                          M         bsf     PCLATH, 3
                          M         endif
                          M         endif
                          M         if (CODE_SIZE > 4)
                          M           if (((ADCIN) & 1000h) == 0)
                          M         bcf     PCLATH, 4
                          M           else
                          M         bsf     PCLATH, 4
MPASM  5.44                          ADC1.ASM   5-3-2020  15:47:42         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M           endif
                          M         endif
                          M       else
                          M         if ((ADCIN) > $)
                          M           if (CODE_SIZE > 2)
                          M             if (((ADCIN) & 800h) == 0)
                          M         bcf     PCLATH, 3
                          M             else
                          M         bsf     PCLATH, 3
                          M             endif
                          M           endif
                          M           if (CODE_SIZE > 4)
                          M             if (((ADCIN) & 1000h) == 0)
                          M         bcf     PCLATH, 4
                          M             else
                          M         bsf     PCLATH, 4
                          M             endif
                          M           endif
                          M         else
                          M           if (CODE_SIZE > 2)
                          M             if (((ADCIN) & 1800h) == 0)
00BF   018A               M         clrf    PCLATH
                          M             else
                          M               if (((ADCIN) & 800h) == 0)
                          M         bcf     PCLATH, 3
                          M               else
                          M         bsf     PCLATH, 3
                          M               endif
                          M               if (CODE_SIZE > 4)
                          M                 if (((ADCIN) & 1000h) == 0)
                          M         bcf     PCLATH, 4
                          M                 else
                          M         bsf     PCLATH, 4
                          M                 endif   
                          M               endif
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M 
00C0   2065               M         call    ADCIN
                          M         MOVE?AB _i
                          M         CHK?RP  _i
                          M     if (((_i)    & 180h) == 0)
                          M       if (PREV_BANK == 1)
                          M         bcf     STATUS, RP0
                          M       endif
                          M       if (PREV_BANK == 2)
                          M         bcf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 3)
                          M         bcf     STATUS, RP0
MPASM  5.44                          ADC1.ASM   5-3-2020  15:47:42         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         bcf     STATUS, RP1
                          M       endif
  00000000                M PREV_BANK = 0
                          M     endif
                          M 
                          M     if (((_i)    & 180h) == 80h)
                          M       if (PREV_BANK == 0)
                          M         bsf     STATUS, RP0
                          M       endif
                          M       if (PREV_BANK == 2)
                          M         bsf     STATUS, RP0
                          M         bcf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 3)
                          M         bcf     STATUS, RP1
                          M       endif
                          M PREV_BANK = 1
                          M     endif
                          M 
                          M     if (((_i)    & 180h) == 100h)
                          M       if (PREV_BANK == 0)
                          M         bsf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 1)
                          M         bcf     STATUS, RP0
                          M         bsf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 3)
                          M         bcf     STATUS, RP0
                          M       endif
                          M PREV_BANK = 2
                          M     endif
                          M 
                          M     if (((_i)    & 180h) == 180h)
                          M       if (PREV_BANK == 0)
                          M         bsf     STATUS, RP0
                          M         bsf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 1)
                          M         bsf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 2)
                          M         bsf     STATUS, RP0
                          M       endif
                          M PREV_BANK = 3
                          M     endif
00C1   00B8               M         movwf   _i
                      00124 
                      00125 ; C:\PBP\ADC1.PBP               00020   lcdout $fe,1,"deger",#i
                      00126         LCDOUT?C        0FEh
00C2   30FE               M         movlw   0FEh
                          M         L?CALL  LCDOUT
                          M         RST?RP
MPASM  5.44                          ADC1.ASM   5-3-2020  15:47:42         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if ((PREV_BANK & 1) != 0)
                          M         bcf     STATUS, RP0
                          M     endif
                          M     if ((PREV_BANK & 2) != 0)
                          M         bcf     STATUS, RP1
                          M     endif
  00000000                M PREV_BANK = 0
                          M 
                          M     ifdef USE_LINKER
                          M       if (CODE_SIZE > 2)
                          M         pagesel LCDOUT
                          M       endif
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         if (CODE_SIZE > 2)
                          M           if (((LCDOUT) & 800h) == 0)
                          M         bcf     PCLATH, 3
                          M         else
                          M         bsf     PCLATH, 3
                          M         endif
                          M         endif
                          M         if (CODE_SIZE > 4)
                          M           if (((LCDOUT) & 1000h) == 0)
                          M         bcf     PCLATH, 4
                          M           else
                          M         bsf     PCLATH, 4
                          M           endif
                          M         endif
                          M       else
                          M         if ((LCDOUT) > $)
                          M           if (CODE_SIZE > 2)
                          M             if (((LCDOUT) & 800h) == 0)
                          M         bcf     PCLATH, 3
                          M             else
                          M         bsf     PCLATH, 3
                          M             endif
                          M           endif
                          M           if (CODE_SIZE > 4)
                          M             if (((LCDOUT) & 1000h) == 0)
                          M         bcf     PCLATH, 4
                          M             else
                          M         bsf     PCLATH, 4
                          M             endif
                          M           endif
                          M         else
                          M           if (CODE_SIZE > 2)
                          M             if (((LCDOUT) & 1800h) == 0)
00C3   018A               M         clrf    PCLATH
                          M             else
                          M               if (((LCDOUT) & 800h) == 0)
                          M         bcf     PCLATH, 3
                          M               else
                          M         bsf     PCLATH, 3
MPASM  5.44                          ADC1.ASM   5-3-2020  15:47:42         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M               endif
                          M               if (CODE_SIZE > 4)
                          M                 if (((LCDOUT) & 1000h) == 0)
                          M         bcf     PCLATH, 4
                          M                 else
                          M         bsf     PCLATH, 4
                          M                 endif   
                          M               endif
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M 
00C4   2021               M         call    LCDOUT
                      00127         LCDOUT?C        001h
00C5   3001               M         movlw   001h
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if ((PREV_BANK & 1) != 0)
                          M         bcf     STATUS, RP0
                          M     endif
                          M     if ((PREV_BANK & 2) != 0)
                          M         bcf     STATUS, RP1
                          M     endif
  00000000                M PREV_BANK = 0
                          M 
                          M     ifdef USE_LINKER
                          M       if (CODE_SIZE > 2)
                          M         pagesel LCDOUT
                          M       endif
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         if (CODE_SIZE > 2)
                          M           if (((LCDOUT) & 800h) == 0)
                          M         bcf     PCLATH, 3
                          M         else
                          M         bsf     PCLATH, 3
                          M         endif
                          M         endif
                          M         if (CODE_SIZE > 4)
                          M           if (((LCDOUT) & 1000h) == 0)
                          M         bcf     PCLATH, 4
                          M           else
                          M         bsf     PCLATH, 4
                          M           endif
                          M         endif
                          M       else
                          M         if ((LCDOUT) > $)
                          M           if (CODE_SIZE > 2)
                          M             if (((LCDOUT) & 800h) == 0)
                          M         bcf     PCLATH, 3
                          M             else
MPASM  5.44                          ADC1.ASM   5-3-2020  15:47:42         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         bsf     PCLATH, 3
                          M             endif
                          M           endif
                          M           if (CODE_SIZE > 4)
                          M             if (((LCDOUT) & 1000h) == 0)
                          M         bcf     PCLATH, 4
                          M             else
                          M         bsf     PCLATH, 4
                          M             endif
                          M           endif
                          M         else
                          M           if (CODE_SIZE > 2)
                          M             if (((LCDOUT) & 1800h) == 0)
00C6   018A               M         clrf    PCLATH
                          M             else
                          M               if (((LCDOUT) & 800h) == 0)
                          M         bcf     PCLATH, 3
                          M               else
                          M         bsf     PCLATH, 3
                          M               endif
                          M               if (CODE_SIZE > 4)
                          M                 if (((LCDOUT) & 1000h) == 0)
                          M         bcf     PCLATH, 4
                          M                 else
                          M         bsf     PCLATH, 4
                          M                 endif   
                          M               endif
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M 
00C7   2021               M         call    LCDOUT
                      00128         LCDOUT?C        064h
00C8   3064               M         movlw   064h
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if ((PREV_BANK & 1) != 0)
                          M         bcf     STATUS, RP0
                          M     endif
                          M     if ((PREV_BANK & 2) != 0)
                          M         bcf     STATUS, RP1
                          M     endif
  00000000                M PREV_BANK = 0
                          M 
                          M     ifdef USE_LINKER
                          M       if (CODE_SIZE > 2)
                          M         pagesel LCDOUT
                          M       endif
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         if (CODE_SIZE > 2)
MPASM  5.44                          ADC1.ASM   5-3-2020  15:47:42         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M           if (((LCDOUT) & 800h) == 0)
                          M         bcf     PCLATH, 3
                          M         else
                          M         bsf     PCLATH, 3
                          M         endif
                          M         endif
                          M         if (CODE_SIZE > 4)
                          M           if (((LCDOUT) & 1000h) == 0)
                          M         bcf     PCLATH, 4
                          M           else
                          M         bsf     PCLATH, 4
                          M           endif
                          M         endif
                          M       else
                          M         if ((LCDOUT) > $)
                          M           if (CODE_SIZE > 2)
                          M             if (((LCDOUT) & 800h) == 0)
                          M         bcf     PCLATH, 3
                          M             else
                          M         bsf     PCLATH, 3
                          M             endif
                          M           endif
                          M           if (CODE_SIZE > 4)
                          M             if (((LCDOUT) & 1000h) == 0)
                          M         bcf     PCLATH, 4
                          M             else
                          M         bsf     PCLATH, 4
                          M             endif
                          M           endif
                          M         else
                          M           if (CODE_SIZE > 2)
                          M             if (((LCDOUT) & 1800h) == 0)
00C9   018A               M         clrf    PCLATH
                          M             else
                          M               if (((LCDOUT) & 800h) == 0)
                          M         bcf     PCLATH, 3
                          M               else
                          M         bsf     PCLATH, 3
                          M               endif
                          M               if (CODE_SIZE > 4)
                          M                 if (((LCDOUT) & 1000h) == 0)
                          M         bcf     PCLATH, 4
                          M                 else
                          M         bsf     PCLATH, 4
                          M                 endif   
                          M               endif
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M 
00CA   2021               M         call    LCDOUT
MPASM  5.44                          ADC1.ASM   5-3-2020  15:47:42         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00129         LCDOUT?C        065h
00CB   3065               M         movlw   065h
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if ((PREV_BANK & 1) != 0)
                          M         bcf     STATUS, RP0
                          M     endif
                          M     if ((PREV_BANK & 2) != 0)
                          M         bcf     STATUS, RP1
                          M     endif
  00000000                M PREV_BANK = 0
                          M 
                          M     ifdef USE_LINKER
                          M       if (CODE_SIZE > 2)
                          M         pagesel LCDOUT
                          M       endif
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         if (CODE_SIZE > 2)
                          M           if (((LCDOUT) & 800h) == 0)
                          M         bcf     PCLATH, 3
                          M         else
                          M         bsf     PCLATH, 3
                          M         endif
                          M         endif
                          M         if (CODE_SIZE > 4)
                          M           if (((LCDOUT) & 1000h) == 0)
                          M         bcf     PCLATH, 4
                          M           else
                          M         bsf     PCLATH, 4
                          M           endif
                          M         endif
                          M       else
                          M         if ((LCDOUT) > $)
                          M           if (CODE_SIZE > 2)
                          M             if (((LCDOUT) & 800h) == 0)
                          M         bcf     PCLATH, 3
                          M             else
                          M         bsf     PCLATH, 3
                          M             endif
                          M           endif
                          M           if (CODE_SIZE > 4)
                          M             if (((LCDOUT) & 1000h) == 0)
                          M         bcf     PCLATH, 4
                          M             else
                          M         bsf     PCLATH, 4
                          M             endif
                          M           endif
                          M         else
                          M           if (CODE_SIZE > 2)
                          M             if (((LCDOUT) & 1800h) == 0)
00CC   018A               M         clrf    PCLATH
                          M             else
MPASM  5.44                          ADC1.ASM   5-3-2020  15:47:42         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M               if (((LCDOUT) & 800h) == 0)
                          M         bcf     PCLATH, 3
                          M               else
                          M         bsf     PCLATH, 3
                          M               endif
                          M               if (CODE_SIZE > 4)
                          M                 if (((LCDOUT) & 1000h) == 0)
                          M         bcf     PCLATH, 4
                          M                 else
                          M         bsf     PCLATH, 4
                          M                 endif   
                          M               endif
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M 
00CD   2021               M         call    LCDOUT
                      00130         LCDOUT?C        067h
00CE   3067               M         movlw   067h
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if ((PREV_BANK & 1) != 0)
                          M         bcf     STATUS, RP0
                          M     endif
                          M     if ((PREV_BANK & 2) != 0)
                          M         bcf     STATUS, RP1
                          M     endif
  00000000                M PREV_BANK = 0
                          M 
                          M     ifdef USE_LINKER
                          M       if (CODE_SIZE > 2)
                          M         pagesel LCDOUT
                          M       endif
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         if (CODE_SIZE > 2)
                          M           if (((LCDOUT) & 800h) == 0)
                          M         bcf     PCLATH, 3
                          M         else
                          M         bsf     PCLATH, 3
                          M         endif
                          M         endif
                          M         if (CODE_SIZE > 4)
                          M           if (((LCDOUT) & 1000h) == 0)
                          M         bcf     PCLATH, 4
                          M           else
                          M         bsf     PCLATH, 4
                          M           endif
                          M         endif
                          M       else
                          M         if ((LCDOUT) > $)
MPASM  5.44                          ADC1.ASM   5-3-2020  15:47:42         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M           if (CODE_SIZE > 2)
                          M             if (((LCDOUT) & 800h) == 0)
                          M         bcf     PCLATH, 3
                          M             else
                          M         bsf     PCLATH, 3
                          M             endif
                          M           endif
                          M           if (CODE_SIZE > 4)
                          M             if (((LCDOUT) & 1000h) == 0)
                          M         bcf     PCLATH, 4
                          M             else
                          M         bsf     PCLATH, 4
                          M             endif
                          M           endif
                          M         else
                          M           if (CODE_SIZE > 2)
                          M             if (((LCDOUT) & 1800h) == 0)
00CF   018A               M         clrf    PCLATH
                          M             else
                          M               if (((LCDOUT) & 800h) == 0)
                          M         bcf     PCLATH, 3
                          M               else
                          M         bsf     PCLATH, 3
                          M               endif
                          M               if (CODE_SIZE > 4)
                          M                 if (((LCDOUT) & 1000h) == 0)
                          M         bcf     PCLATH, 4
                          M                 else
                          M         bsf     PCLATH, 4
                          M                 endif   
                          M               endif
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M 
00D0   2021               M         call    LCDOUT
                      00131         LCDOUT?C        065h
00D1   3065               M         movlw   065h
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if ((PREV_BANK & 1) != 0)
                          M         bcf     STATUS, RP0
                          M     endif
                          M     if ((PREV_BANK & 2) != 0)
                          M         bcf     STATUS, RP1
                          M     endif
  00000000                M PREV_BANK = 0
                          M 
                          M     ifdef USE_LINKER
                          M       if (CODE_SIZE > 2)
                          M         pagesel LCDOUT
MPASM  5.44                          ADC1.ASM   5-3-2020  15:47:42         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       endif
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         if (CODE_SIZE > 2)
                          M           if (((LCDOUT) & 800h) == 0)
                          M         bcf     PCLATH, 3
                          M         else
                          M         bsf     PCLATH, 3
                          M         endif
                          M         endif
                          M         if (CODE_SIZE > 4)
                          M           if (((LCDOUT) & 1000h) == 0)
                          M         bcf     PCLATH, 4
                          M           else
                          M         bsf     PCLATH, 4
                          M           endif
                          M         endif
                          M       else
                          M         if ((LCDOUT) > $)
                          M           if (CODE_SIZE > 2)
                          M             if (((LCDOUT) & 800h) == 0)
                          M         bcf     PCLATH, 3
                          M             else
                          M         bsf     PCLATH, 3
                          M             endif
                          M           endif
                          M           if (CODE_SIZE > 4)
                          M             if (((LCDOUT) & 1000h) == 0)
                          M         bcf     PCLATH, 4
                          M             else
                          M         bsf     PCLATH, 4
                          M             endif
                          M           endif
                          M         else
                          M           if (CODE_SIZE > 2)
                          M             if (((LCDOUT) & 1800h) == 0)
00D2   018A               M         clrf    PCLATH
                          M             else
                          M               if (((LCDOUT) & 800h) == 0)
                          M         bcf     PCLATH, 3
                          M               else
                          M         bsf     PCLATH, 3
                          M               endif
                          M               if (CODE_SIZE > 4)
                          M                 if (((LCDOUT) & 1000h) == 0)
                          M         bcf     PCLATH, 4
                          M                 else
                          M         bsf     PCLATH, 4
                          M                 endif   
                          M               endif
                          M             endif
                          M           endif
                          M         endif
MPASM  5.44                          ADC1.ASM   5-3-2020  15:47:42         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       endif
                          M     endif
                          M 
00D3   2021               M         call    LCDOUT
                      00132         LCDOUT?C        072h
00D4   3072               M         movlw   072h
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if ((PREV_BANK & 1) != 0)
                          M         bcf     STATUS, RP0
                          M     endif
                          M     if ((PREV_BANK & 2) != 0)
                          M         bcf     STATUS, RP1
                          M     endif
  00000000                M PREV_BANK = 0
                          M 
                          M     ifdef USE_LINKER
                          M       if (CODE_SIZE > 2)
                          M         pagesel LCDOUT
                          M       endif
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         if (CODE_SIZE > 2)
                          M           if (((LCDOUT) & 800h) == 0)
                          M         bcf     PCLATH, 3
                          M         else
                          M         bsf     PCLATH, 3
                          M         endif
                          M         endif
                          M         if (CODE_SIZE > 4)
                          M           if (((LCDOUT) & 1000h) == 0)
                          M         bcf     PCLATH, 4
                          M           else
                          M         bsf     PCLATH, 4
                          M           endif
                          M         endif
                          M       else
                          M         if ((LCDOUT) > $)
                          M           if (CODE_SIZE > 2)
                          M             if (((LCDOUT) & 800h) == 0)
                          M         bcf     PCLATH, 3
                          M             else
                          M         bsf     PCLATH, 3
                          M             endif
                          M           endif
                          M           if (CODE_SIZE > 4)
                          M             if (((LCDOUT) & 1000h) == 0)
                          M         bcf     PCLATH, 4
                          M             else
                          M         bsf     PCLATH, 4
                          M             endif
                          M           endif
                          M         else
MPASM  5.44                          ADC1.ASM   5-3-2020  15:47:42         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M           if (CODE_SIZE > 2)
                          M             if (((LCDOUT) & 1800h) == 0)
00D5   018A               M         clrf    PCLATH
                          M             else
                          M               if (((LCDOUT) & 800h) == 0)
                          M         bcf     PCLATH, 3
                          M               else
                          M         bsf     PCLATH, 3
                          M               endif
                          M               if (CODE_SIZE > 4)
                          M                 if (((LCDOUT) & 1000h) == 0)
                          M         bcf     PCLATH, 4
                          M                 else
                          M         bsf     PCLATH, 4
                          M                 endif   
                          M               endif
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M 
00D6   2021               M         call    LCDOUT
                      00133         LCDOUTD?B       _i
                          M         MOVE?BA _i
                          M         CHK?RP  _i
                          M     if (((_i)    & 180h) == 0)
                          M       if (PREV_BANK == 1)
                          M         bcf     STATUS, RP0
                          M       endif
                          M       if (PREV_BANK == 2)
                          M         bcf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 3)
                          M         bcf     STATUS, RP0
                          M         bcf     STATUS, RP1
                          M       endif
  00000000                M PREV_BANK = 0
                          M     endif
                          M 
                          M     if (((_i)    & 180h) == 80h)
                          M       if (PREV_BANK == 0)
                          M         bsf     STATUS, RP0
                          M       endif
                          M       if (PREV_BANK == 2)
                          M         bsf     STATUS, RP0
                          M         bcf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 3)
                          M         bcf     STATUS, RP1
                          M       endif
                          M PREV_BANK = 1
                          M     endif
MPASM  5.44                          ADC1.ASM   5-3-2020  15:47:42         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M 
                          M     if (((_i)    & 180h) == 100h)
                          M       if (PREV_BANK == 0)
                          M         bsf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 1)
                          M         bcf     STATUS, RP0
                          M         bsf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 3)
                          M         bcf     STATUS, RP0
                          M       endif
                          M PREV_BANK = 2
                          M     endif
                          M 
                          M     if (((_i)    & 180h) == 180h)
                          M       if (PREV_BANK == 0)
                          M         bsf     STATUS, RP0
                          M         bsf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 1)
                          M         bsf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 2)
                          M         bsf     STATUS, RP0
                          M       endif
                          M PREV_BANK = 3
                          M     endif
00D7   0838               M         movf    _i,  W
                          M         L?CALL  LCDOUTDEC
                          M         RST?RP
                          M     if ((PREV_BANK & 1) != 0)
                          M         bcf     STATUS, RP0
                          M     endif
                          M     if ((PREV_BANK & 2) != 0)
                          M         bcf     STATUS, RP1
                          M     endif
  00000000                M PREV_BANK = 0
                          M 
                          M     ifdef USE_LINKER
                          M       if (CODE_SIZE > 2)
                          M         pagesel LCDOUTDEC
                          M       endif
                          M     else
                          M       if ((LCDOUTDEC) < 1)
                          M         if (CODE_SIZE > 2)
                          M           if (((LCDOUTDEC) & 800h) == 0)
                          M         bcf     PCLATH, 3
                          M         else
                          M         bsf     PCLATH, 3
                          M         endif
                          M         endif
                          M         if (CODE_SIZE > 4)
MPASM  5.44                          ADC1.ASM   5-3-2020  15:47:42         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M           if (((LCDOUTDEC) & 1000h) == 0)
                          M         bcf     PCLATH, 4
                          M           else
                          M         bsf     PCLATH, 4
                          M           endif
                          M         endif
                          M       else
                          M         if ((LCDOUTDEC) > $)
                          M           if (CODE_SIZE > 2)
                          M             if (((LCDOUTDEC) & 800h) == 0)
                          M         bcf     PCLATH, 3
                          M             else
                          M         bsf     PCLATH, 3
                          M             endif
                          M           endif
                          M           if (CODE_SIZE > 4)
                          M             if (((LCDOUTDEC) & 1000h) == 0)
                          M         bcf     PCLATH, 4
                          M             else
                          M         bsf     PCLATH, 4
                          M             endif
                          M           endif
                          M         else
                          M           if (CODE_SIZE > 2)
                          M             if (((LCDOUTDEC) & 1800h) == 0)
00D8   018A               M         clrf    PCLATH
                          M             else
                          M               if (((LCDOUTDEC) & 800h) == 0)
                          M         bcf     PCLATH, 3
                          M               else
                          M         bsf     PCLATH, 3
                          M               endif
                          M               if (CODE_SIZE > 4)
                          M                 if (((LCDOUTDEC) & 1000h) == 0)
                          M         bcf     PCLATH, 4
                          M                 else
                          M         bsf     PCLATH, 4
                          M                 endif   
                          M               endif
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M 
00D9   2002               M         call    LCDOUTDEC
                      00134 
                      00135 ; C:\PBP\ADC1.PBP               00021   pause 1000
                      00136         PAUSE?C 003E8h
                          M     if (((003E8h) >> 8) == 0)
                          M         MOVE?CA 003E8h
                          M         L?CALL  PAUSE
                          M     else
MPASM  5.44                          ADC1.ASM   5-3-2020  15:47:42         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         MOVE?CB (003E8h) >> 8, R1 + 1
                          M         CHK?RP  R1 + 1
                          M     if (((R1 + 1) & 180h) == 0)
                          M       if (PREV_BANK == 1)
                          M         bcf     STATUS, RP0
                          M       endif
                          M       if (PREV_BANK == 2)
                          M         bcf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 3)
                          M         bcf     STATUS, RP0
                          M         bcf     STATUS, RP1
                          M       endif
  00000000                M PREV_BANK = 0
                          M     endif
                          M 
                          M     if (((R1 + 1) & 180h) == 80h)
                          M       if (PREV_BANK == 0)
                          M         bsf     STATUS, RP0
                          M       endif
                          M       if (PREV_BANK == 2)
                          M         bsf     STATUS, RP0
                          M         bcf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 3)
                          M         bcf     STATUS, RP1
                          M       endif
                          M PREV_BANK = 1
                          M     endif
                          M 
                          M     if (((R1 + 1) & 180h) == 100h)
                          M       if (PREV_BANK == 0)
                          M         bsf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 1)
                          M         bcf     STATUS, RP0
                          M         bsf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 3)
                          M         bcf     STATUS, RP0
                          M       endif
                          M PREV_BANK = 2
                          M     endif
                          M 
                          M     if (((R1 + 1) & 180h) == 180h)
                          M       if (PREV_BANK == 0)
                          M         bsf     STATUS, RP0
                          M         bsf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 1)
                          M         bsf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 2)
MPASM  5.44                          ADC1.ASM   5-3-2020  15:47:42         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         bsf     STATUS, RP0
                          M       endif
                          M PREV_BANK = 3
                          M     endif
                          M     if (low ((003E8h) >> 8) == 0)
                          M         clrf    R1 + 1
                          M     else
00DA   3003               M         movlw   low ((003E8h) >> 8)
00DB   00A3               M         movwf   R1 + 1
                          M     endif
                          M         MOVE?CA low (003E8h)
00DC   30E8               M         movlw   low (low (003E8h))
                          M         L?CALL  PAUSEL
                          M         RST?RP
                          M     if ((PREV_BANK & 1) != 0)
                          M         bcf     STATUS, RP0
                          M     endif
                          M     if ((PREV_BANK & 2) != 0)
                          M         bcf     STATUS, RP1
                          M     endif
  00000000                M PREV_BANK = 0
                          M 
                          M     ifdef USE_LINKER
                          M       if (CODE_SIZE > 2)
                          M         pagesel PAUSEL
                          M       endif
                          M     else
                          M       if ((PAUSEL) < 1)
                          M         if (CODE_SIZE > 2)
                          M           if (((PAUSEL) & 800h) == 0)
                          M         bcf     PCLATH, 3
                          M         else
                          M         bsf     PCLATH, 3
                          M         endif
                          M         endif
                          M         if (CODE_SIZE > 4)
                          M           if (((PAUSEL) & 1000h) == 0)
                          M         bcf     PCLATH, 4
                          M           else
                          M         bsf     PCLATH, 4
                          M           endif
                          M         endif
                          M       else
                          M         if ((PAUSEL) > $)
                          M           if (CODE_SIZE > 2)
                          M             if (((PAUSEL) & 800h) == 0)
                          M         bcf     PCLATH, 3
                          M             else
                          M         bsf     PCLATH, 3
                          M             endif
                          M           endif
                          M           if (CODE_SIZE > 4)
                          M             if (((PAUSEL) & 1000h) == 0)
MPASM  5.44                          ADC1.ASM   5-3-2020  15:47:42         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         bcf     PCLATH, 4
                          M             else
                          M         bsf     PCLATH, 4
                          M             endif
                          M           endif
                          M         else
                          M           if (CODE_SIZE > 2)
                          M             if (((PAUSEL) & 1800h) == 0)
00DD   018A               M         clrf    PCLATH
                          M             else
                          M               if (((PAUSEL) & 800h) == 0)
                          M         bcf     PCLATH, 3
                          M               else
                          M         bsf     PCLATH, 3
                          M               endif
                          M               if (CODE_SIZE > 4)
                          M                 if (((PAUSEL) & 1000h) == 0)
                          M         bcf     PCLATH, 4
                          M                 else
                          M         bsf     PCLATH, 4
                          M                 endif   
                          M               endif
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M 
00DE   2077               M         call    PAUSEL
                          M     endif
                      00137 
                      00138 ; C:\PBP\ADC1.PBP               00022   goto label
                      00139         GOTO?L  _label
                          M         L?GOTO  _label
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (_label))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M         RST?RP
                          M     if ((PREV_BANK & 1) != 0)
                          M         bcf     STATUS, RP0
                          M     endif
                          M     if ((PREV_BANK & 2) != 0)
                          M         bcf     STATUS, RP1
                          M     endif
  00000000                M PREV_BANK = 0
                          M 
                          M     ifdef USE_LINKER
                          M       if (CODE_SIZE > 2)
MPASM  5.44                          ADC1.ASM   5-3-2020  15:47:42         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         pagesel _label
                          M       endif
                          M     else
                          M       if ((_label) < 1)
                          M         if (CODE_SIZE > 2)
                          M           if (((_label) & 800h) == 0)
                          M         bcf     PCLATH, 3
                          M           else
                          M         bsf     PCLATH, 3
                          M           endif
                          M         endif
                          M         if (CODE_SIZE > 4)
                          M           if (((_label) & 1000h) == 0)
                          M         bcf     PCLATH, 4
                          M           else
                          M         bsf     PCLATH, 4
                          M           endif
                          M         endif
                          M       else
                          M         if ((_label) > $)
                          M           if (CODE_SIZE > 2)
                          M             if (((_label) & 800h) == 0)
                          M         bcf     PCLATH, 3
                          M             else
                          M         bsf     PCLATH, 3
                          M             endif
                          M           endif
                          M           if (CODE_SIZE > 4)
                          M             if (((_label) & 1000h) == 0)
                          M         bcf     PCLATH, 4
                          M             else
                          M         bsf     PCLATH, 4
                          M             endif
                          M           endif
                          M         else
                          M           if (CODE_SIZE > 2)
                          M             if (((_label) & 1800h) == 0)
00DF   018A               M         clrf    PCLATH
                          M             else
                          M               if (((_label) & 800h) == 0)
                          M         bcf     PCLATH, 3
                          M               else
                          M         bsf     PCLATH, 3
                          M               endif
                          M               if (CODE_SIZE > 4)
                          M                 if (((_label) & 1000h) == 0)
                          M         bcf     PCLATH, 4
                          M                 else
                          M         bsf     PCLATH, 4
                          M                 endif
                          M               endif
                          M             endif
                          M           endif
MPASM  5.44                          ADC1.ASM   5-3-2020  15:47:42         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         endif
                          M       endif
                          M     endif
                          M 
00E0   28BE               M         goto    _label
                      00140 
                      00141         END
MPASM  5.44                          ADC1.ASM   5-3-2020  15:47:42         PAGE 33


SYMBOL TABLE
  LABEL                             VALUE 

ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ADCIN                             00000065
ADCIN?CB                          
ADCIN_USED                        00000001
ADCON0                            0000001F
ADCON1                            0000009F
ADCS0                             00000006
ADCS1                             00000007
ADC_BITS                          8
ADC_CLOCK                         1
ADC_SAMPLEUS                      00000032
ADC_SAPMLEUS                      50
ADDEN                             00000003
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADRESH                            0000001E
ADRESL                            0000009E
BANK0_END                         0000007F
BANK0_START                       00000020
BANK1_END                         000000EF
BANK1_START                       000000A0
BANK2_END                         0000016F
BANK2_START                       00000110
BANK3_END                         000001EF
BANK3_START                       00000190
BCLIE                             00000003
BCLIF                             00000003
BF                                00000000
BIT?FLIP                          
BIT?FW                            
BIT?GOTO                          
BIT?R1                            
BIT?R2                            
BIT?W                             
BRGH                              00000002
BUTTON_PAUSE                      0000000A
C                                 00000000
CCP1CON                           00000017
CCP1IE                            00000002
CCP1IF                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP1_BIT                          00000002
CCP1_REG                          00000007
CCP2CON                           0000001D
MPASM  5.44                          ADC1.ASM   5-3-2020  15:47:42         PAGE 34


SYMBOL TABLE
  LABEL                             VALUE 

CCP2IE                            00000000
CCP2IF                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2X                             00000005
CCP2Y                             00000004
CCP2_BIT                          00000001
CCP2_REG                          00000007
CCPR1                             00000015
CCPR1H                            00000016
CCPR1L                            00000015
CCPR2                             0000001B
CCPR2H                            0000001C
CCPR2L                            0000001B
CHK?RP                            
CHS0                              00000003
CHS1                              00000004
CHS2                              00000005
CKE                               00000006
CKP                               00000004
CLRWDT?                           
CLRWDT?NOP                        
CODE_SIZE                         8
CREN                              00000004
CSRC                              00000007
D                                 00000005
DATA_ADDRESS                      00000005
DC                                00000001
DEBUGIN_BIT                       00000000
DEBUGIN_MODE                      00000001
DEBUGIN_REG                       00000006
DEBUG_BAUD                        00000960
DEBUG_BIT                         00000000
DEBUG_DELAY                       00000193
DEBUG_MODE                        00000001
DEBUG_REG                         00000006
DIV                               00000098
DIV32DIV                          0000009A
DIV_USED                          00000001
DONE                              000000B4
DONERET                           000000B8
DONE_USED                         00000001
D_A                               00000005
D_NOT_A                           00000005
EEADR                             0000010D
EEADRH                            0000010F
EECON1                            0000018C
EECON2                            0000018D
EEDATA                            0000010C
EEDATH                            0000010E
EEIE                              00000004
MPASM  5.44                          ADC1.ASM   5-3-2020  15:47:42         PAGE 35


SYMBOL TABLE
  LABEL                             VALUE 

EEIF                              00000004
EEPGD                             00000007
EEPROM_END                        000021FF
EEPROM_START                      00002100
F                                 00000001
FERR                              00000002
FLAGS                             00000032
FLAGS_USED                        00000001
FSR                               00000004
GCEN                              00000007
GIE                               00000007
GO                                00000002
GOP                               00000033
GOTO?L                            
GO_DONE                           00000002
GO_NOT_DONE                       00000002
HSER_BAUD                         00000960
HSER_BITS                         00000008
HSER_RCSTA                        00000090
HSER_SPBRG                        00000019
HSER_TXSTA                        00000020
I2CFIRSTFLAG                      FLAGS, 2
I2CREADFLAG                       FLAGS, 3
I2CSTOPFLAG                       FLAGS, 5
I2CSTOPSTRFLAG                    FLAGS, 6
I2CWRITEFLAG                      FLAGS, 4
I2C_DATA                          00000005
I2C_READ                          00000002
I2C_START                         00000003
I2C_STOP                          00000004
IBF                               00000007
IBOV                              00000005
INDF                              00000000
INIT                              000000B9
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IRP                               00000007
L?CALL                            
L?GOTO                            
LABEL?L                           
LCDCDFLAG                         FLAGS, 0
LCDINITFLAG                       FLAGS, 1
LCDOUT                            00000021
LCDOUT?C                          
LCDOUTD?B                         
LCDOUTDEC                         00000002
LCDOUTDECL                        00000003
LCDOUTDECL_USED                   00000001
LCDOUTDEC_USED                    00000001
LCDOUT_USED                       00000001
LCD_BITS                          8
MPASM  5.44                          ADC1.ASM   5-3-2020  15:47:42         PAGE 36


SYMBOL TABLE
  LABEL                             VALUE 

LCD_COMMANDUS                     000007D0
LCD_DATAUS                        00000032
LCD_DBIT                          0
LCD_DREG                          PORTD
LCD_EBIT                          1
LCD_EREG                          PORTB
LCD_LINES                         00000002
LCD_RSBIT                         0
LCD_RSREG                         PORTB
LCD_RWBIT                         00000000
LCD_RWREG                         00000006
MOVE?AB                           
MOVE?AT                           
MOVE?AW                           
MOVE?AWW                          
MOVE?BA                           
MOVE?BB                           
MOVE?BT                           
MOVE?BW                           
MOVE?CA                           
MOVE?CB                           
MOVE?CT                           
MOVE?CW                           
MOVE?TA                           
MOVE?TB                           
MOVE?TT                           
MOVE?TW                           
MOVE?WA                           
MOVE?WB                           
MOVE?WT                           
MOVE?WW                           
MOVE?WWA                          
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BO                            00000000
NOT_BOR                           00000000
NOT_DONE                          00000002
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RC8                           00000006
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_TX8                           00000006
NOT_W                             00000002
NOT_WRITE                         00000002
OBF                               00000006
OERR                              00000001
OPTION_REG                        00000081
OSC                               00000004
OSC_VALID                         00000001
P                                 00000004
PAUSE                             00000076
MPASM  5.44                          ADC1.ASM   5-3-2020  15:47:42         PAGE 37


SYMBOL TABLE
  LABEL                             VALUE 

PAUSE?C                           
PAUSEL                            00000077
PAUSEUS                           00000083
PAUSEUSL                          00000084
PAUSEUS_USED                      00000001
PAUSE_DELAY                       000003DF
PAUSE_USED                        00000001
PCFG0                             00000000
PCFG1                             00000001
PCFG2                             00000002
PCFG3                             00000003
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PEIE                              00000006
PEN                               00000002
PIE1                              0000008C
PIE2                              0000008D
PIR1                              0000000C
PIR2                              0000000D
PORTA                             00000005
PORTB                             00000006
PORTC                             00000007
PORTD                             00000008
PORTE                             00000009
PR2                               00000092
PREV_BANK                         00000000
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
PSPIE                             00000007
PSPIF                             00000007
PSPMODE                           00000004
R                                 00000002
R0                                00000020
R1                                00000022
R2                                00000024
R3                                00000026
R4                                00000028
R5                                0000002A
R6                                0000002C
R7                                0000002E
R8                                00000030
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RAM_BANKS                         00000004
RAM_END                           000001EF
RAM_START                         00000020
MPASM  5.44                          ADC1.ASM   5-3-2020  15:47:42         PAGE 38


SYMBOL TABLE
  LABEL                             VALUE 

RB0                               00000000
RB1                               00000001
RB2                               00000002
RB3                               00000003
RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RC0                               00000000
RC1                               00000001
RC2                               00000002
RC3                               00000003
RC4                               00000004
RC5                               00000005
RC6                               00000006
RC7                               00000007
RC8_9                             00000006
RC9                               00000006
RCD8                              00000000
RCEN                              00000003
RCIE                              00000005
RCIF                              00000005
RCREG                             0000001A
RCSTA                             00000018
RD                                00000000
RD0                               00000000
RD1                               00000001
RD2                               00000002
RD3                               00000003
RD4                               00000004
RD5                               00000005
RD6                               00000006
RD7                               00000007
RE0                               00000000
RE1                               00000001
RE2                               00000002
READ_WRITE                        00000002
RESET_ORG                         00000000
RM1                               00000034
RM2                               00000035
RP0                               00000005
RP1                               00000006
RR1                               00000036
RR2                               00000037
RSEN                              00000001
RST?RP                            
RX9                               00000006
RX9D                              00000000
R_NOT_W                           00000002
R_W                               00000002
S                                 00000003
MPASM  5.44                          ADC1.ASM   5-3-2020  15:47:42         PAGE 39


SYMBOL TABLE
  LABEL                             VALUE 

SEN                               00000000
SMP                               00000007
SPBRG                             00000099
SPEN                              00000007
SREN                              00000005
SSPADD                            00000093
SSPBUF                            00000013
SSPCON                            00000014
SSPCON2                           00000091
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPOV                             00000006
SSPSTAT                           00000094
STATUS                            00000003
SYNC                              00000004
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
T1INSYNC                          00000002
T1OSCEN                           00000003
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000012
TMR0                              00000001
TMR0IE                            00000005
TMR0IF                            00000002
TMR1                              0000000E
TMR1CS                            00000001
TMR1H                             0000000F
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             0000000E
TMR1ON                            00000000
TMR2                              00000011
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000085
TRISA0                            00000000
MPASM  5.44                          ADC1.ASM   5-3-2020  15:47:42         PAGE 40


SYMBOL TABLE
  LABEL                             VALUE 

TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISB                             00000086
TRISB0                            00000000
TRISB1                            00000001
TRISB2                            00000002
TRISB3                            00000003
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000087
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRISD                             00000088
TRISD0                            00000000
TRISD1                            00000001
TRISD2                            00000002
TRISD3                            00000003
TRISD4                            00000004
TRISD5                            00000005
TRISD6                            00000006
TRISD7                            00000007
TRISE                             00000089
TRISE0                            00000000
TRISE1                            00000001
TRISE2                            00000002
TRMT                              00000001
TX8_9                             00000006
TX9                               00000006
TX9D                              00000000
TXD8                              00000000
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             00000019
TXSTA                             00000098
UA                                00000001
W                                 00000000
WCOL                              00000007
WR                                00000001
WREN                              00000002
WRERR                             00000003
Z                                 00000002
MPASM  5.44                          ADC1.ASM   5-3-2020  15:47:42         PAGE 41


SYMBOL TABLE
  LABEL                             VALUE 

_BODEN_OFF                        00003FBF
_BODEN_ON                         00003FFF
_BOREN_OFF                        00003FBF
_BOREN_ON                         00003FFF
_CONFIG                           00002007
_CPD_OFF                          00003FFF
_CPD_ON                           00003EFF
_CP_ALL                           00000FCF
_CP_HALF                          00001FDF
_CP_OFF                           00003FFF
_CP_UPPER_256                     00002FEF
_DEBUG_OFF                        00003FFF
_DEBUG_ON                         000037FF
_DEVID1                           00002006
_FOSC_EXTRC                       00003FFF
_FOSC_HS                          00003FFE
_FOSC_LP                          00003FFC
_FOSC_XT                          00003FFD
_HS_OSC                           00003FFE
_IDLOC0                           00002000
_IDLOC1                           00002001
_IDLOC2                           00002002
_IDLOC3                           00002003
_LP_OSC                           00003FFC
_LVP_OFF                          00003F7F
_LVP_ON                           00003FFF
_PORTH                            00000007
_PORTL                            00000006
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FF7
_RC_OSC                           00003FFF
_TRISH                            00000087
_TRISL                            00000086
_USED                             00000001
_WDTE_OFF                         00003FFB
_WDTE_ON                          00003FFF
_WDT_OFF                          00003FFB
_WDT_ON                           00003FFF
_WRT_ENABLE_OFF                   00003DFF
_WRT_ENABLE_ON                    00003FFF
_WRT_OFF                          00003DFF
_WRT_ON                           00003FFF
_XT_OSC                           00003FFD
__16F877                          00000001
_i                                00000038
_label                            000000BE
adcinloop                         00000071
divloop                           0000009C
divok                             000000AE
lcdchkcd                          00000057
lcdloop                           0000005C
lcdout1                           00000049
lcdouta                           00000020
MPASM  5.44                          ADC1.ASM   5-3-2020  15:47:42         PAGE 42


SYMBOL TABLE
  LABEL                             VALUE 

lcdoutcom                         00000048
lcdoutdig                         00000015
lcdsend                           0000005C
main                              000000B9
pauseloop                         00000078
pauseusdone                       00000097
pauseush                          0000008D
pauseusloop                       0000008A


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)

0000 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0040 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0080 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
00C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX X--------------- ----------------
2000 : -------X-------- ---------------- ---------------- ----------------

All other memory blocks unused.

Program Memory Words Used:   225
Program Memory Words Free:  7967


Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,     2 suppressed

