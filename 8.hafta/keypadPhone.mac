
	NOLIST
; PICBASIC PRO(TM) Compiler 2.60, (c) 1998, 2009 microEngineering Labs, Inc. All Rights Reserved. 

LABEL?L macro Label
        RST?RP
    ifdef PM_USED
        LALL
Label
        XALL
    else
Label
    endif
    endm

ADD?BCB macro Bin, Cin, Bout
    if ((Bout) == (Bin))
      if ((Cin) == 1)
        CHK?RP  Bout
        incf    Bout, F
      else
        movlw   Cin
        CHK?RP  Bin
        addwf   Bin, F
      endif
    else
      if ((Cin) == 1)
        CHK?RP  Bin
        incf    Bin, W
        MOVE?AB Bout
      else
        movlw   Cin
        CHK?RP  Bin
        addwf   Bin, W
        MOVE?AB Bout
      endif
    endif
    endm

CMPGT?BCL macro Bin, Cin, Label
    if ((Cin) < 0)
        L?GOTO  Label
    else
      if ((Cin) < 0ffh)
        CLRWDT?
        MOVE?CA (Cin) + 1
        CHK?RP  Bin
        subwf   Bin, W
        BIT?GOTO 1, STATUS, C, Label
      endif
    endif
    endm

CMPNE?TCL macro Regin, Bitin, Cin, Label
    if ((Cin) == 0)
        CLRWDT?
        BIT?GOTO 1, Regin, Bitin, Label
    else
      if ((Cin) == 1)
        CLRWDT?
        BIT?GOTO 0, Regin, Bitin, Label
      else
        L?GOTO  Label
      endif
    endif
    endm

GOSUB?L macro Label
    local dlabel
    ifdef DEBUG_STACK
        CHK?RP  DEBUG_STACK
      ifdef DEBUG_STACK_ADDR
        bcf     STATUS, C
        rlf     DEBUG_STACK, W
        addlw   DEBUG_STACK_ADDR
        movwf   FSR
        movlw   low (dlabel)
        movwf   INDF
        incf    FSR, F
        movlw	high (dlabel)
        movwf   INDF
      endif
        incf    DEBUG_STACK, F
    endif
        L?CALL  Label
dlabel
    endm

GOTO?L macro Label
        L?GOTO  Label
    endm

HSEROUT?C macro Cin
        movlw   Cin
        L?CALL  HSEROUT
    endm
HSEROUT_USED = 1

HSEROUTCOUNT?C macro Cin
        MOVE?CB Cin, R4 + 1
    endm

HSEROUTNUM?B macro Bin
        MOVE?BW Bin, R2
    endm

HSEROUTDEC? macro
        MOVE?CW HSEROUTJ, R8
        L?CALL  SEROUT2DEC
    endm
HSEROUTJ_USED = 1
SEROUT2DEC_USED = 1

LCDOUT?B macro Bin
        MOVE?BA Bin
        L?CALL  LCDOUT
    endm
LCDOUT_USED = 1

LCDOUT?C macro Cin
        movlw   Cin
        L?CALL  LCDOUT
    endm
LCDOUT_USED = 1

LCDOUTD?B macro Bin
        MOVE?BA Bin
        L?CALL  LCDOUTDEC
    endm
LCDOUTDEC_USED = 1

NEXT?BCL macro Bin, Cin, Label
    if ((Cin) == 1)
        CHK?RP  Bin
      if ((PREV_BANK == 0) & (CODE_SIZE <= 2))
        incfsz  Bin, F
        goto    Label
      else
        incf    Bin, F
        BIT?GOTO 0, STATUS, Z, Label
      endif
    else
        movlw   Cin
        CHK?RP  Bin
        addwf   Bin, F
      if ((Cin) <= 255)
        BIT?GOTO 0, STATUS, C, Label
      endif
    endif
    endm

PAUSE?C macro Cin
    if (((Cin) >> 8) == 0)
        MOVE?CA Cin
        L?CALL  PAUSE
    else
        MOVE?CB (Cin) >> 8, R1 + 1
        MOVE?CA low (Cin)
        L?CALL  PAUSEL
    endif
    endm
PAUSE_USED = 1

READADDRESS?B macro Bin
        MOVE?BB Bin, EEADR
    endm

READ?B macro Bout
        L?CALL  READ
        MOVE?AB Bout
    endm
READ_USED = 1

RETURN? macro
    ifdef DEBUG_STACK
        CHK?RP  DEBUG_STACK
        decf    DEBUG_STACK, F
    endif
        RST?RP
        return
    endm

WRITEADDRESS?B macro Bin
        MOVE?BB Bin, EEADR
    endm

WRITE?B macro Bin
        MOVE?BA Bin
        L?CALL  WRITE
    endm
WRITE_USED = 1


	LIST
